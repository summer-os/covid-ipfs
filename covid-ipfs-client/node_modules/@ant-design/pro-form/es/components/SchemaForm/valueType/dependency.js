import _extends from "@babel/runtime/helpers/esm/extends";
import React from "react";
import { noteOnce } from "rc-util/es/warning";
import ProFormDependency from '../../Dependency';
export var dependency = function dependency(item, _ref) {
  var genItems = _ref.genItems;

  /** ProFormDependency */
  if (item.valueType === 'dependency') {
    var _item$getFieldProps;

    var fieldProps = (_item$getFieldProps = item.getFieldProps) === null || _item$getFieldProps === void 0 ? void 0 : _item$getFieldProps.call(item);
    noteOnce(Array.isArray(fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.name), 'SchemaForm: fieldProps.name should be NamePath[] when valueType is "dependency"');
    noteOnce(typeof item.columns === 'function', 'SchemaForm: columns should be a function when valueType is "dependency"');
    if (!Array.isArray(fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.name)) return null;
    return /*#__PURE__*/React.createElement(ProFormDependency, _extends({}, fieldProps, {
      key: item.key
    }), function (values) {
      if (!item.columns || typeof item.columns !== 'function') return null;
      return genItems(item.columns(values));
    });
  }

  return true;
};