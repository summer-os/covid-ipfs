import _extends from "@babel/runtime/helpers/esm/extends";
import "antd/es/config-provider/style";
import _ConfigProvider from "antd/es/config-provider";
import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["logo", "message", "style", "activityConfig", "backgroundImageUrl", "title", "subTitle", "actions", "children"];
import { useIntl } from '@ant-design/pro-provider';
import React, { useContext, useMemo } from 'react';
import { ProForm } from '../ProForm';
import './index.less';
export function LoginFormPage(props) {
  var logo = props.logo,
      message = props.message,
      style = props.style,
      _props$activityConfig = props.activityConfig,
      activityConfig = _props$activityConfig === void 0 ? {} : _props$activityConfig,
      backgroundImageUrl = props.backgroundImageUrl,
      title = props.title,
      subTitle = props.subTitle,
      actions = props.actions,
      children = props.children,
      proFormProps = _objectWithoutProperties(props, _excluded);

  var intl = useIntl();

  var genSubmitButtonProps = function genSubmitButtonProps() {
    var _proFormProps$submitt, _proFormProps$submitt2;

    if (proFormProps.submitter === false) return false;
    if (((_proFormProps$submitt = proFormProps.submitter) === null || _proFormProps$submitt === void 0 ? void 0 : _proFormProps$submitt.submitButtonProps) === false) return false;
    return _objectSpread({
      size: 'large',
      style: {
        width: '100%'
      }
    }, (_proFormProps$submitt2 = proFormProps.submitter) === null || _proFormProps$submitt2 === void 0 ? void 0 : _proFormProps$submitt2.submitButtonProps);
  };

  var submitter = _objectSpread(_objectSpread({
    searchConfig: {
      submitText: intl.getMessage('loginForm.submitText', '登录')
    },
    render: function render(_, dom) {
      return dom.pop();
    }
  }, proFormProps.submitter), {}, {
    submitButtonProps: genSubmitButtonProps()
  });

  var context = useContext(_ConfigProvider.ConfigContext);
  var baseClassName = context.getPrefixCls('pro-form-login-page');

  var getCls = function getCls(className) {
    return "".concat(baseClassName, "-").concat(className);
  };
  /** 生成logo 的dom，如果是string 设置为图片 如果是个 dom 就原样保留 */


  var logoDom = useMemo(function () {
    if (!logo) return null;

    if (typeof logo === 'string') {
      return /*#__PURE__*/React.createElement("img", {
        src: logo
      });
    }

    return logo;
  }, [logo]);
  return /*#__PURE__*/React.createElement("div", {
    className: baseClassName,
    style: _objectSpread(_objectSpread({}, style), {}, {
      backgroundImage: "url(\"".concat(backgroundImageUrl, "\")")
    })
  }, /*#__PURE__*/React.createElement("div", {
    className: getCls('notice')
  }, activityConfig && /*#__PURE__*/React.createElement("div", {
    className: getCls('notice-activity'),
    style: activityConfig.style
  }, activityConfig.title && /*#__PURE__*/React.createElement("div", {
    className: getCls('notice-activity-title')
  }, " ", activityConfig.title, " "), activityConfig.subTitle && /*#__PURE__*/React.createElement("div", {
    className: getCls('notice-activity-subTitle')
  }, " ", activityConfig.subTitle, " "), activityConfig.action && /*#__PURE__*/React.createElement("div", {
    className: getCls('notice-activity-action')
  }, " ", activityConfig.action, " "))), /*#__PURE__*/React.createElement("div", {
    className: getCls('container')
  }, /*#__PURE__*/React.createElement("div", {
    className: getCls('top')
  }, title || logoDom ? /*#__PURE__*/React.createElement("div", {
    className: getCls('header')
  }, logoDom ? /*#__PURE__*/React.createElement("span", {
    className: getCls('logo')
  }, logoDom) : null, title ? /*#__PURE__*/React.createElement("span", {
    className: getCls('title')
  }, title) : null) : null, subTitle ? /*#__PURE__*/React.createElement("div", {
    className: getCls('desc')
  }, subTitle) : null), /*#__PURE__*/React.createElement("div", {
    className: getCls('main')
  }, /*#__PURE__*/React.createElement(ProForm, _extends({
    isKeyPressSubmit: true
  }, proFormProps, {
    submitter: submitter
  }), message, children), actions ? /*#__PURE__*/React.createElement("div", {
    className: getCls('other')
  }, actions) : null)));
}