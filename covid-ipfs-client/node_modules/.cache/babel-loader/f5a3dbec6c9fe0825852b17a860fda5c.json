{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { proFieldParsingValueEnumToArray } from '@ant-design/pro-field';\nimport { omitBoolean, omitUndefinedAndEmptyArr, runFunction } from '@ant-design/pro-utils';\nimport { columnRender, defaultOnFilter, renderColumnsTitle } from './columnRender';\nimport { genColumnKey } from './index';\n/**\n * 转化 columns 到 pro 的格式 主要是 render 方法的自行实现\n *\n * @param columns\n * @param map\n * @param columnEmptyText\n */\n\nexport function genProColumnToColumn(params) {\n  var columns = params.columns,\n      counter = params.counter,\n      columnEmptyText = params.columnEmptyText,\n      type = params.type,\n      editableUtils = params.editableUtils,\n      _params$rowKey = params.rowKey,\n      rowKey = _params$rowKey === void 0 ? 'id' : _params$rowKey,\n      _params$childrenColum = params.childrenColumnName,\n      childrenColumnName = _params$childrenColum === void 0 ? 'children' : _params$childrenColum;\n  var subNameRecord = new Map();\n  return columns.map(function (columnProps, columnsIndex) {\n    var key = columnProps.key,\n        dataIndex = columnProps.dataIndex,\n        valueEnum = columnProps.valueEnum,\n        _columnProps$valueTyp = columnProps.valueType,\n        valueType = _columnProps$valueTyp === void 0 ? 'text' : _columnProps$valueTyp,\n        children = columnProps.children,\n        onFilter = columnProps.onFilter,\n        _columnProps$filters = columnProps.filters,\n        filters = _columnProps$filters === void 0 ? [] : _columnProps$filters;\n    var columnKey = genColumnKey(key || (dataIndex === null || dataIndex === void 0 ? void 0 : dataIndex.toString()), columnsIndex); // 这些都没有，说明是普通的表格不需要 pro 管理\n\n    var noNeedPro = !valueEnum && !valueType && !children;\n\n    if (noNeedPro) {\n      return _objectSpread({\n        index: columnsIndex\n      }, columnProps);\n    }\n    /**\n     * 是不是展开行和多选按钮\n     */\n\n\n    var isExtraColumns = columnProps === _Table.EXPAND_COLUMN || columnProps === _Table.SELECTION_COLUMN;\n\n    if (isExtraColumns) {\n      return {\n        index: columnsIndex,\n        isExtraColumns: true,\n        hideInSearch: true,\n        hideInTable: false,\n        hideInForm: true,\n        hideInSetting: true,\n        extraColumn: columnProps\n      };\n    }\n\n    var config = counter.columnsMap[columnKey] || {\n      fixed: columnProps.fixed\n    };\n\n    var genOnFilter = function genOnFilter() {\n      if (onFilter === true) {\n        return function (value, row) {\n          return defaultOnFilter(value, row, dataIndex);\n        };\n      }\n\n      return omitBoolean(onFilter);\n    };\n\n    var keyName = rowKey;\n\n    var tempColumns = _objectSpread(_objectSpread({\n      index: columnsIndex,\n      key: columnKey\n    }, columnProps), {}, {\n      title: renderColumnsTitle(columnProps),\n      valueEnum: valueEnum,\n      filters: filters === true ? proFieldParsingValueEnumToArray(runFunction(valueEnum, undefined)).filter(function (valueItem) {\n        return valueItem && valueItem.value !== 'all';\n      }) : filters,\n      onFilter: genOnFilter(),\n      fixed: config.fixed,\n      width: columnProps.width || (columnProps.fixed ? 200 : undefined),\n      children: columnProps.children ? genProColumnToColumn(_objectSpread(_objectSpread({}, params), {}, {\n        columns: columnProps === null || columnProps === void 0 ? void 0 : columnProps.children\n      })) : undefined,\n      render: function render(text, rowData, index) {\n        if (typeof rowKey === 'function') {\n          keyName = rowKey(rowData, index);\n        }\n\n        var uniqueKey;\n\n        if (Reflect.has(rowData, keyName)) {\n          var _rowData$childrenColu;\n\n          uniqueKey = rowData[keyName];\n          var parentInfo = subNameRecord.get(uniqueKey) || [];\n          (_rowData$childrenColu = rowData[childrenColumnName]) === null || _rowData$childrenColu === void 0 ? void 0 : _rowData$childrenColu.forEach(function (item) {\n            var itemUniqueKey = item[keyName];\n\n            if (!subNameRecord.has(itemUniqueKey)) {\n              subNameRecord.set(itemUniqueKey, parentInfo.concat([index, childrenColumnName]));\n            }\n          });\n        }\n\n        var renderProps = {\n          columnProps: columnProps,\n          text: text,\n          rowData: rowData,\n          index: index,\n          columnEmptyText: columnEmptyText,\n          counter: counter,\n          type: type,\n          subName: subNameRecord.get(uniqueKey),\n          editableUtils: editableUtils\n        };\n        return columnRender(renderProps);\n      }\n    });\n\n    return omitUndefinedAndEmptyArr(tempColumns);\n  }).filter(function (item) {\n    return !item.hideInTable;\n  });\n}","map":{"version":3,"sources":["/Users/jameszow/Documents/RustWorkSpace/covid-ipfs/covid-ipfs-client/node_modules/@ant-design/pro-table/es/utils/genProColumnToColumn.js"],"names":["_Table","_objectSpread","proFieldParsingValueEnumToArray","omitBoolean","omitUndefinedAndEmptyArr","runFunction","columnRender","defaultOnFilter","renderColumnsTitle","genColumnKey","genProColumnToColumn","params","columns","counter","columnEmptyText","type","editableUtils","_params$rowKey","rowKey","_params$childrenColum","childrenColumnName","subNameRecord","Map","map","columnProps","columnsIndex","key","dataIndex","valueEnum","_columnProps$valueTyp","valueType","children","onFilter","_columnProps$filters","filters","columnKey","toString","noNeedPro","index","isExtraColumns","EXPAND_COLUMN","SELECTION_COLUMN","hideInSearch","hideInTable","hideInForm","hideInSetting","extraColumn","config","columnsMap","fixed","genOnFilter","value","row","keyName","tempColumns","title","undefined","filter","valueItem","width","render","text","rowData","uniqueKey","Reflect","has","_rowData$childrenColu","parentInfo","get","forEach","item","itemUniqueKey","set","concat","renderProps","subName"],"mappings":"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","sourcesContent":["import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { proFieldParsingValueEnumToArray } from '@ant-design/pro-field';\nimport { omitBoolean, omitUndefinedAndEmptyArr, runFunction } from '@ant-design/pro-utils';\nimport { columnRender, defaultOnFilter, renderColumnsTitle } from './columnRender';\nimport { genColumnKey } from './index';\n/**\n * 转化 columns 到 pro 的格式 主要是 render 方法的自行实现\n *\n * @param columns\n * @param map\n * @param columnEmptyText\n */\n\nexport function genProColumnToColumn(params) {\n  var columns = params.columns,\n      counter = params.counter,\n      columnEmptyText = params.columnEmptyText,\n      type = params.type,\n      editableUtils = params.editableUtils,\n      _params$rowKey = params.rowKey,\n      rowKey = _params$rowKey === void 0 ? 'id' : _params$rowKey,\n      _params$childrenColum = params.childrenColumnName,\n      childrenColumnName = _params$childrenColum === void 0 ? 'children' : _params$childrenColum;\n  var subNameRecord = new Map();\n  return columns.map(function (columnProps, columnsIndex) {\n    var key = columnProps.key,\n        dataIndex = columnProps.dataIndex,\n        valueEnum = columnProps.valueEnum,\n        _columnProps$valueTyp = columnProps.valueType,\n        valueType = _columnProps$valueTyp === void 0 ? 'text' : _columnProps$valueTyp,\n        children = columnProps.children,\n        onFilter = columnProps.onFilter,\n        _columnProps$filters = columnProps.filters,\n        filters = _columnProps$filters === void 0 ? [] : _columnProps$filters;\n    var columnKey = genColumnKey(key || (dataIndex === null || dataIndex === void 0 ? void 0 : dataIndex.toString()), columnsIndex); // 这些都没有，说明是普通的表格不需要 pro 管理\n\n    var noNeedPro = !valueEnum && !valueType && !children;\n\n    if (noNeedPro) {\n      return _objectSpread({\n        index: columnsIndex\n      }, columnProps);\n    }\n    /**\n     * 是不是展开行和多选按钮\n     */\n\n\n    var isExtraColumns = columnProps === _Table.EXPAND_COLUMN || columnProps === _Table.SELECTION_COLUMN;\n\n    if (isExtraColumns) {\n      return {\n        index: columnsIndex,\n        isExtraColumns: true,\n        hideInSearch: true,\n        hideInTable: false,\n        hideInForm: true,\n        hideInSetting: true,\n        extraColumn: columnProps\n      };\n    }\n\n    var config = counter.columnsMap[columnKey] || {\n      fixed: columnProps.fixed\n    };\n\n    var genOnFilter = function genOnFilter() {\n      if (onFilter === true) {\n        return function (value, row) {\n          return defaultOnFilter(value, row, dataIndex);\n        };\n      }\n\n      return omitBoolean(onFilter);\n    };\n\n    var keyName = rowKey;\n\n    var tempColumns = _objectSpread(_objectSpread({\n      index: columnsIndex,\n      key: columnKey\n    }, columnProps), {}, {\n      title: renderColumnsTitle(columnProps),\n      valueEnum: valueEnum,\n      filters: filters === true ? proFieldParsingValueEnumToArray(runFunction(valueEnum, undefined)).filter(function (valueItem) {\n        return valueItem && valueItem.value !== 'all';\n      }) : filters,\n      onFilter: genOnFilter(),\n      fixed: config.fixed,\n      width: columnProps.width || (columnProps.fixed ? 200 : undefined),\n      children: columnProps.children ? genProColumnToColumn(_objectSpread(_objectSpread({}, params), {}, {\n        columns: columnProps === null || columnProps === void 0 ? void 0 : columnProps.children\n      })) : undefined,\n      render: function render(text, rowData, index) {\n        if (typeof rowKey === 'function') {\n          keyName = rowKey(rowData, index);\n        }\n\n        var uniqueKey;\n\n        if (Reflect.has(rowData, keyName)) {\n          var _rowData$childrenColu;\n\n          uniqueKey = rowData[keyName];\n          var parentInfo = subNameRecord.get(uniqueKey) || [];\n          (_rowData$childrenColu = rowData[childrenColumnName]) === null || _rowData$childrenColu === void 0 ? void 0 : _rowData$childrenColu.forEach(function (item) {\n            var itemUniqueKey = item[keyName];\n\n            if (!subNameRecord.has(itemUniqueKey)) {\n              subNameRecord.set(itemUniqueKey, parentInfo.concat([index, childrenColumnName]));\n            }\n          });\n        }\n\n        var renderProps = {\n          columnProps: columnProps,\n          text: text,\n          rowData: rowData,\n          index: index,\n          columnEmptyText: columnEmptyText,\n          counter: counter,\n          type: type,\n          subName: subNameRecord.get(uniqueKey),\n          editableUtils: editableUtils\n        };\n        return columnRender(renderProps);\n      }\n    });\n\n    return omitUndefinedAndEmptyArr(tempColumns);\n  }).filter(function (item) {\n    return !item.hideInTable;\n  });\n}"]},"metadata":{},"sourceType":"module"}