{"ast":null,"code":"import \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport \"antd/es/space/style\";\nimport _Space from \"antd/es/space\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"text\", \"mode\", \"render\", \"renderFormItem\", \"fieldProps\", \"proFieldKey\"];\nimport { EyeInvisibleOutlined, EyeOutlined } from '@ant-design/icons';\nimport { useIntl } from '@ant-design/pro-provider';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport React from 'react';\n/**\n * 最基本的组件，就是个普通的 Input.Password\n *\n * @param\n */\n\nvar FieldPassword = function FieldPassword(_ref, ref) {\n  var text = _ref.text,\n      mode = _ref.mode,\n      render = _ref.render,\n      renderFormItem = _ref.renderFormItem,\n      fieldProps = _ref.fieldProps,\n      proFieldKey = _ref.proFieldKey,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var intl = useIntl();\n\n  var _useMergedState = useMergedState(function () {\n    return rest.visible || false;\n  }, {\n    value: rest.visible,\n    onChange: rest.onVisible\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      visible = _useMergedState2[0],\n      setVisible = _useMergedState2[1];\n\n  if (mode === 'read') {\n    var dom = /*#__PURE__*/React.createElement(React.Fragment, null, \"-\");\n\n    if (text) {\n      dom = /*#__PURE__*/React.createElement(_Space, null, /*#__PURE__*/React.createElement(\"span\", {\n        ref: ref\n      }, visible ? text : '＊ ＊ ＊ ＊ ＊'), /*#__PURE__*/React.createElement(\"a\", {\n        onClick: function onClick() {\n          return setVisible(!visible);\n        }\n      }, visible ? /*#__PURE__*/React.createElement(EyeOutlined, null) : /*#__PURE__*/React.createElement(EyeInvisibleOutlined, null)));\n    }\n\n    if (render) {\n      return render(text, _objectSpread({\n        mode: mode\n      }, fieldProps), dom);\n    }\n\n    return dom;\n  }\n\n  if (mode === 'edit' || mode === 'update') {\n    var _dom = /*#__PURE__*/React.createElement(_Input.Password, _extends({\n      placeholder: intl.getMessage('tableForm.inputPlaceholder', '请输入'),\n      ref: ref\n    }, fieldProps));\n\n    if (renderFormItem) {\n      return renderFormItem(text, _objectSpread({\n        mode: mode\n      }, fieldProps), _dom);\n    }\n\n    return _dom;\n  }\n\n  return null;\n};\n\nexport default /*#__PURE__*/React.forwardRef(FieldPassword);","map":{"version":3,"sources":["/Users/jameszow/Documents/RustWorkSpace/covid-ipfs/covid-ipfs-client/node_modules/@ant-design/pro-field/es/components/Password/index.js"],"names":["_Input","_extends","_objectSpread","_Space","_slicedToArray","_objectWithoutProperties","_excluded","EyeInvisibleOutlined","EyeOutlined","useIntl","useMergedState","React","FieldPassword","_ref","ref","text","mode","render","renderFormItem","fieldProps","proFieldKey","rest","intl","_useMergedState","visible","value","onChange","onVisible","_useMergedState2","setVisible","dom","createElement","Fragment","onClick","_dom","Password","placeholder","getMessage","forwardRef"],"mappings":"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","sourcesContent":["import \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport \"antd/es/space/style\";\nimport _Space from \"antd/es/space\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"text\", \"mode\", \"render\", \"renderFormItem\", \"fieldProps\", \"proFieldKey\"];\nimport { EyeInvisibleOutlined, EyeOutlined } from '@ant-design/icons';\nimport { useIntl } from '@ant-design/pro-provider';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport React from 'react';\n/**\n * 最基本的组件，就是个普通的 Input.Password\n *\n * @param\n */\n\nvar FieldPassword = function FieldPassword(_ref, ref) {\n  var text = _ref.text,\n      mode = _ref.mode,\n      render = _ref.render,\n      renderFormItem = _ref.renderFormItem,\n      fieldProps = _ref.fieldProps,\n      proFieldKey = _ref.proFieldKey,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var intl = useIntl();\n\n  var _useMergedState = useMergedState(function () {\n    return rest.visible || false;\n  }, {\n    value: rest.visible,\n    onChange: rest.onVisible\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      visible = _useMergedState2[0],\n      setVisible = _useMergedState2[1];\n\n  if (mode === 'read') {\n    var dom = /*#__PURE__*/React.createElement(React.Fragment, null, \"-\");\n\n    if (text) {\n      dom = /*#__PURE__*/React.createElement(_Space, null, /*#__PURE__*/React.createElement(\"span\", {\n        ref: ref\n      }, visible ? text : '＊ ＊ ＊ ＊ ＊'), /*#__PURE__*/React.createElement(\"a\", {\n        onClick: function onClick() {\n          return setVisible(!visible);\n        }\n      }, visible ? /*#__PURE__*/React.createElement(EyeOutlined, null) : /*#__PURE__*/React.createElement(EyeInvisibleOutlined, null)));\n    }\n\n    if (render) {\n      return render(text, _objectSpread({\n        mode: mode\n      }, fieldProps), dom);\n    }\n\n    return dom;\n  }\n\n  if (mode === 'edit' || mode === 'update') {\n    var _dom = /*#__PURE__*/React.createElement(_Input.Password, _extends({\n      placeholder: intl.getMessage('tableForm.inputPlaceholder', '请输入'),\n      ref: ref\n    }, fieldProps));\n\n    if (renderFormItem) {\n      return renderFormItem(text, _objectSpread({\n        mode: mode\n      }, fieldProps), _dom);\n    }\n\n    return _dom;\n  }\n\n  return null;\n};\n\nexport default /*#__PURE__*/React.forwardRef(FieldPassword);"]},"metadata":{},"sourceType":"module"}