{"ast":null,"code":"var _jsxFileName = \"/Users/jameszow/Documents/RustWorkSpace/covid-ipfs/covid-ipfs-client/src/App.tsx\";\nimport React from 'react';\nimport { Button } from 'antd';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"App\",\n  children: /*#__PURE__*/_jsxDEV(Button, {\n    type: \"primary\",\n    children: \"Button\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 3\n}, this);\n\n_c = App;\n\nconst waitTime = function () {\n  let time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(true);\n    }, time);\n  });\n};\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jameszow/Documents/RustWorkSpace/covid-ipfs/covid-ipfs-client/src/App.tsx"],"names":["React","Button","App","waitTime","time","Promise","resolve","setTimeout"],"mappings":";AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,SAASC,MAAT,QAAgC,MAAhC;AACA,OAAO,WAAP;;;AAaA,MAAMC,GAAO,GAAG,mBACd;AAAK,EAAA,SAAS,EAAC,KAAf;AAAA,yBACE,QAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMA,G;;AAMN,MAAMC,QAAQ,GAAG,YAAwB;AAAA,MAAvBC,IAAuB,uEAAR,GAAQ;AACvC,SAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC9BC,IAAAA,UAAU,CAAC,MAAM;AACfD,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KAFS,EAEPF,IAFO,CAAV;AAGD,GAJM,CAAP;AAKD,CAND;;AAQA,eAAeF,GAAf","sourcesContent":["import React, { FC } from 'react';\nimport { Button, message } from 'antd';\nimport './App.css';\nimport {\n  ProCard,\n  ProForm,\n  ProFormCheckbox,\n  ProFormDatePicker,\n  ProFormDateRangePicker,\n  ProFormSelect,\n  ProFormText,\n  ProFormTextArea,\n  StepsForm,\n} from '@ant-design/pro-components';\n\nconst App: FC = () => (\n  <div className=\"App\">\n    <Button type=\"primary\">Button</Button>\n  </div>\n);\n\nconst waitTime = (time: number = 100) => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(true);\n    }, time);\n  });\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}