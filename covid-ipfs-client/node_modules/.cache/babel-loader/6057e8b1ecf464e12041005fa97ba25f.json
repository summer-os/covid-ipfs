{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport \"antd/es/config-provider/style\";\nimport _ConfigProvider from \"antd/es/config-provider\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"rowKey\", \"dragSortKey\", \"dragSortHandlerRender\", \"onDragSortEnd\", \"onDataSourceChange\", \"columns\", \"dataSource\"];\nimport { MenuOutlined } from '@ant-design/icons';\nimport React, { useCallback, useContext, useMemo, useRef } from 'react';\nimport { SortableHandle } from 'react-sortable-hoc';\nimport ProTable from '../../Table';\nimport { useDragSort } from '../../utils/useDragSort';\nimport './index.less'; // 用于创建可拖拽把手组件的工厂\n\nvar handleCreator = function handleCreator(handle) {\n  return SortableHandle(function () {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, handle);\n  });\n};\n\nfunction DragSortTable(props) {\n  var rowKey = props.rowKey,\n      dragSortKey = props.dragSortKey,\n      dragSortHandlerRender = props.dragSortHandlerRender,\n      onDragSortEnd = props.onDragSortEnd,\n      onDataSourceChange = props.onDataSourceChange,\n      propsColumns = props.columns,\n      oriDs = props.dataSource,\n      otherProps = _objectWithoutProperties(props, _excluded);\n\n  var _useContext = useContext(_ConfigProvider.ConfigContext),\n      getPrefixCls = _useContext.getPrefixCls; // 默认拖拽把手\n\n\n  var DragHandle = useMemo(function () {\n    return handleCreator( /*#__PURE__*/React.createElement(MenuOutlined, {\n      className: getPrefixCls('pro-table-drag-icon')\n    }));\n  }, [getPrefixCls]);\n  var isDragSortColumn = useCallback(function (item) {\n    return item.key === dragSortKey || item.dataIndex === dragSortKey;\n  }, [dragSortKey]); // 根据 dragSortKey 查找目标列配置\n\n  var handleColumn = useMemo(function () {\n    return propsColumns === null || propsColumns === void 0 ? void 0 : propsColumns.find(function (item) {\n      return isDragSortColumn(item);\n    });\n  }, [propsColumns, isDragSortColumn]); // 记录原始列配置\n\n  var originColumnRef = useRef(_objectSpread({}, handleColumn)); // 使用自定义hooks获取拖拽相关组件的components集合\n\n  var _useDragSort = useDragSort({\n    dataSource: oriDs === null || oriDs === void 0 ? void 0 : oriDs.slice(),\n    dragSortKey: dragSortKey,\n    onDragSortEnd: onDragSortEnd,\n    components: props.components,\n    rowKey: rowKey\n  }),\n      components = _useDragSort.components; // 重写列配置的render\n\n\n  var columns = useMemo(function () {\n    var originColumn = originColumnRef.current;\n    if (!handleColumn) return propsColumns;\n\n    var dargRender = function dargRender() {\n      var _originColumn$render;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var dom = args[0],\n          rowData = args[1],\n          index = args[2],\n          action = args[3],\n          schema = args[4];\n      var RealHandle = dragSortHandlerRender ? handleCreator(dragSortHandlerRender(rowData, index)) : DragHandle;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: getPrefixCls('pro-table-drag-visible-cell')\n      }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RealHandle, null), (_originColumn$render = originColumn.render) === null || _originColumn$render === void 0 ? void 0 : _originColumn$render.call(originColumn, dom, rowData, index, action, schema)));\n    }; // 重新生成数据\n\n\n    return propsColumns === null || propsColumns === void 0 ? void 0 : propsColumns.map(function (item) {\n      if (!isDragSortColumn(item)) {\n        return item;\n      }\n\n      return _objectSpread(_objectSpread({}, item), {}, {\n        render: dargRender\n      });\n    });\n  }, [DragHandle, dragSortHandlerRender, getPrefixCls, handleColumn, isDragSortColumn, propsColumns]);\n  return handleColumn ? /*#__PURE__*/React.createElement(ProTable, _extends({}, otherProps, {\n    rowKey: rowKey,\n    dataSource: oriDs,\n    components: components,\n    columns: columns,\n    onDataSourceChange: onDataSourceChange\n  })) :\n  /*#__PURE__*/\n\n  /* istanbul ignore next */\n  React.createElement(ProTable, _extends({}, otherProps, {\n    rowKey: rowKey,\n    dataSource: oriDs,\n    columns: columns,\n    onDataSourceChange: onDataSourceChange\n  }));\n}\n\nexport default DragSortTable;","map":{"version":3,"sources":["/Users/jameszow/Documents/RustWorkSpace/covid-ipfs/covid-ipfs-client/node_modules/@ant-design/pro-table/es/components/DragSortTable/index.js"],"names":["_extends","_objectSpread","_ConfigProvider","_objectWithoutProperties","_excluded","MenuOutlined","React","useCallback","useContext","useMemo","useRef","SortableHandle","ProTable","useDragSort","handleCreator","handle","createElement","Fragment","DragSortTable","props","rowKey","dragSortKey","dragSortHandlerRender","onDragSortEnd","onDataSourceChange","propsColumns","columns","oriDs","dataSource","otherProps","_useContext","ConfigContext","getPrefixCls","DragHandle","className","isDragSortColumn","item","key","dataIndex","handleColumn","find","originColumnRef","_useDragSort","slice","components","originColumn","current","dargRender","_originColumn$render","_len","arguments","length","args","Array","_key","dom","rowData","index","action","schema","RealHandle","render","call","map"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport \"antd/es/config-provider/style\";\nimport _ConfigProvider from \"antd/es/config-provider\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"rowKey\", \"dragSortKey\", \"dragSortHandlerRender\", \"onDragSortEnd\", \"onDataSourceChange\", \"columns\", \"dataSource\"];\nimport { MenuOutlined } from '@ant-design/icons';\nimport React, { useCallback, useContext, useMemo, useRef } from 'react';\nimport { SortableHandle } from 'react-sortable-hoc';\nimport ProTable from '../../Table';\nimport { useDragSort } from '../../utils/useDragSort';\nimport './index.less'; // 用于创建可拖拽把手组件的工厂\n\nvar handleCreator = function handleCreator(handle) {\n  return SortableHandle(function () {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, handle);\n  });\n};\n\nfunction DragSortTable(props) {\n  var rowKey = props.rowKey,\n      dragSortKey = props.dragSortKey,\n      dragSortHandlerRender = props.dragSortHandlerRender,\n      onDragSortEnd = props.onDragSortEnd,\n      onDataSourceChange = props.onDataSourceChange,\n      propsColumns = props.columns,\n      oriDs = props.dataSource,\n      otherProps = _objectWithoutProperties(props, _excluded);\n\n  var _useContext = useContext(_ConfigProvider.ConfigContext),\n      getPrefixCls = _useContext.getPrefixCls; // 默认拖拽把手\n\n\n  var DragHandle = useMemo(function () {\n    return handleCreator( /*#__PURE__*/React.createElement(MenuOutlined, {\n      className: getPrefixCls('pro-table-drag-icon')\n    }));\n  }, [getPrefixCls]);\n  var isDragSortColumn = useCallback(function (item) {\n    return item.key === dragSortKey || item.dataIndex === dragSortKey;\n  }, [dragSortKey]); // 根据 dragSortKey 查找目标列配置\n\n  var handleColumn = useMemo(function () {\n    return propsColumns === null || propsColumns === void 0 ? void 0 : propsColumns.find(function (item) {\n      return isDragSortColumn(item);\n    });\n  }, [propsColumns, isDragSortColumn]); // 记录原始列配置\n\n  var originColumnRef = useRef(_objectSpread({}, handleColumn)); // 使用自定义hooks获取拖拽相关组件的components集合\n\n  var _useDragSort = useDragSort({\n    dataSource: oriDs === null || oriDs === void 0 ? void 0 : oriDs.slice(),\n    dragSortKey: dragSortKey,\n    onDragSortEnd: onDragSortEnd,\n    components: props.components,\n    rowKey: rowKey\n  }),\n      components = _useDragSort.components; // 重写列配置的render\n\n\n  var columns = useMemo(function () {\n    var originColumn = originColumnRef.current;\n    if (!handleColumn) return propsColumns;\n\n    var dargRender = function dargRender() {\n      var _originColumn$render;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var dom = args[0],\n          rowData = args[1],\n          index = args[2],\n          action = args[3],\n          schema = args[4];\n      var RealHandle = dragSortHandlerRender ? handleCreator(dragSortHandlerRender(rowData, index)) : DragHandle;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: getPrefixCls('pro-table-drag-visible-cell')\n      }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RealHandle, null), (_originColumn$render = originColumn.render) === null || _originColumn$render === void 0 ? void 0 : _originColumn$render.call(originColumn, dom, rowData, index, action, schema)));\n    }; // 重新生成数据\n\n\n    return propsColumns === null || propsColumns === void 0 ? void 0 : propsColumns.map(function (item) {\n      if (!isDragSortColumn(item)) {\n        return item;\n      }\n\n      return _objectSpread(_objectSpread({}, item), {}, {\n        render: dargRender\n      });\n    });\n  }, [DragHandle, dragSortHandlerRender, getPrefixCls, handleColumn, isDragSortColumn, propsColumns]);\n  return handleColumn ? /*#__PURE__*/React.createElement(ProTable, _extends({}, otherProps, {\n    rowKey: rowKey,\n    dataSource: oriDs,\n    components: components,\n    columns: columns,\n    onDataSourceChange: onDataSourceChange\n  })) :\n  /*#__PURE__*/\n\n  /* istanbul ignore next */\n  React.createElement(ProTable, _extends({}, otherProps, {\n    rowKey: rowKey,\n    dataSource: oriDs,\n    columns: columns,\n    onDataSourceChange: onDataSourceChange\n  }));\n}\n\nexport default DragSortTable;"]},"metadata":{},"sourceType":"module"}