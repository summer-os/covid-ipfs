{"ast":null,"code":"import \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"name\", \"children\", \"ignoreFormListField\"];\nimport React from \"react\";\nimport { isDeepEqualReact, merge, ProFormContext } from '@ant-design/pro-utils';\nimport get from \"rc-util/es/utils/get\";\nimport set from \"rc-util/es/utils/set\";\nimport { useContext, useMemo } from 'react';\nimport { FormListContext } from '../List';\n\nvar ProFormDependency = function ProFormDependency(_ref) {\n  var names = _ref.name,\n      children = _ref.children,\n      ignoreFormListField = _ref.ignoreFormListField,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var context = useContext(ProFormContext); // ProFromList 的 field，里面有name和key\n\n  var formListField = useContext(FormListContext); // flatten each name into an (string | number)[]\n\n  var flattenNames = useMemo(function () {\n    return names.map(function (itemName) {\n      var _formListField$listNa;\n\n      var name = [itemName]; // ignoreFormListField为 true 或 formListField.name === undefined 时\n      // 应从全局取值，要将 names 中各项的路径前缀(formListField.listName)忽略\n\n      if (!ignoreFormListField && formListField.name !== undefined && ((_formListField$listNa = formListField.listName) === null || _formListField$listNa === void 0 ? void 0 : _formListField$listNa.length)) {\n        name.unshift(formListField.listName);\n      }\n\n      return name.flat(1);\n    });\n  }, [formListField.listName, formListField.name, ignoreFormListField, names]);\n  return /*#__PURE__*/React.createElement(_Form.Item, _extends({}, rest, {\n    noStyle: true,\n    shouldUpdate: function shouldUpdate(prevValues, nextValues, info) {\n      if (typeof rest.shouldUpdate === 'boolean') {\n        return rest.shouldUpdate;\n      } else if (typeof rest.shouldUpdate === 'function') {\n        var _rest$shouldUpdate;\n\n        return (_rest$shouldUpdate = rest.shouldUpdate) === null || _rest$shouldUpdate === void 0 ? void 0 : _rest$shouldUpdate.call(rest, prevValues, nextValues, info);\n      }\n\n      return flattenNames.some(function (name) {\n        return !isDeepEqualReact(get(prevValues, name), get(nextValues, name));\n      });\n    }\n  }), function (form) {\n    var values = {};\n\n    for (var i = 0; i < names.length; i++) {\n      var _context$getFieldForm;\n\n      var pathToGet = flattenNames[i],\n          pathToSet = names[i];\n      var finalName = [pathToSet].flat(1);\n      var value = (_context$getFieldForm = context.getFieldFormatValueObject) === null || _context$getFieldForm === void 0 ? void 0 : _context$getFieldForm.call(context, pathToGet);\n\n      if (value && Object.keys(value).length) {\n        // transform 会生成多余的value，这里需要注入一下\n        values = merge({}, values, value);\n\n        if (get(value, pathToGet)) {\n          values = set(values, finalName, get(value, pathToGet), false);\n        }\n      } else {\n        var _form$getFieldValue;\n\n        value = (_form$getFieldValue = form.getFieldValue) === null || _form$getFieldValue === void 0 ? void 0 : _form$getFieldValue.call(form, pathToGet);\n\n        if (typeof value !== 'undefined') {\n          values = set(values, finalName, value, false);\n        }\n      }\n    }\n\n    return children === null || children === void 0 ? void 0 : children(values, _objectSpread(_objectSpread({}, form), context));\n  });\n};\n\nexport default ProFormDependency;","map":{"version":3,"sources":["/Users/jameszow/Documents/RustWorkSpace/covid-ipfs/covid-ipfs-client/node_modules/@ant-design/pro-form/es/components/Dependency/index.js"],"names":["_Form","_extends","_objectSpread","_objectWithoutProperties","_excluded","React","isDeepEqualReact","merge","ProFormContext","get","set","useContext","useMemo","FormListContext","ProFormDependency","_ref","names","name","children","ignoreFormListField","rest","context","formListField","flattenNames","map","itemName","_formListField$listNa","undefined","listName","length","unshift","flat","createElement","Item","noStyle","shouldUpdate","prevValues","nextValues","info","_rest$shouldUpdate","call","some","form","values","i","_context$getFieldForm","pathToGet","pathToSet","finalName","value","getFieldFormatValueObject","Object","keys","_form$getFieldValue","getFieldValue"],"mappings":"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","sourcesContent":["import \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"name\", \"children\", \"ignoreFormListField\"];\nimport React from \"react\";\nimport { isDeepEqualReact, merge, ProFormContext } from '@ant-design/pro-utils';\nimport get from \"rc-util/es/utils/get\";\nimport set from \"rc-util/es/utils/set\";\nimport { useContext, useMemo } from 'react';\nimport { FormListContext } from '../List';\n\nvar ProFormDependency = function ProFormDependency(_ref) {\n  var names = _ref.name,\n      children = _ref.children,\n      ignoreFormListField = _ref.ignoreFormListField,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var context = useContext(ProFormContext); // ProFromList 的 field，里面有name和key\n\n  var formListField = useContext(FormListContext); // flatten each name into an (string | number)[]\n\n  var flattenNames = useMemo(function () {\n    return names.map(function (itemName) {\n      var _formListField$listNa;\n\n      var name = [itemName]; // ignoreFormListField为 true 或 formListField.name === undefined 时\n      // 应从全局取值，要将 names 中各项的路径前缀(formListField.listName)忽略\n\n      if (!ignoreFormListField && formListField.name !== undefined && ((_formListField$listNa = formListField.listName) === null || _formListField$listNa === void 0 ? void 0 : _formListField$listNa.length)) {\n        name.unshift(formListField.listName);\n      }\n\n      return name.flat(1);\n    });\n  }, [formListField.listName, formListField.name, ignoreFormListField, names]);\n  return /*#__PURE__*/React.createElement(_Form.Item, _extends({}, rest, {\n    noStyle: true,\n    shouldUpdate: function shouldUpdate(prevValues, nextValues, info) {\n      if (typeof rest.shouldUpdate === 'boolean') {\n        return rest.shouldUpdate;\n      } else if (typeof rest.shouldUpdate === 'function') {\n        var _rest$shouldUpdate;\n\n        return (_rest$shouldUpdate = rest.shouldUpdate) === null || _rest$shouldUpdate === void 0 ? void 0 : _rest$shouldUpdate.call(rest, prevValues, nextValues, info);\n      }\n\n      return flattenNames.some(function (name) {\n        return !isDeepEqualReact(get(prevValues, name), get(nextValues, name));\n      });\n    }\n  }), function (form) {\n    var values = {};\n\n    for (var i = 0; i < names.length; i++) {\n      var _context$getFieldForm;\n\n      var pathToGet = flattenNames[i],\n          pathToSet = names[i];\n      var finalName = [pathToSet].flat(1);\n      var value = (_context$getFieldForm = context.getFieldFormatValueObject) === null || _context$getFieldForm === void 0 ? void 0 : _context$getFieldForm.call(context, pathToGet);\n\n      if (value && Object.keys(value).length) {\n        // transform 会生成多余的value，这里需要注入一下\n        values = merge({}, values, value);\n\n        if (get(value, pathToGet)) {\n          values = set(values, finalName, get(value, pathToGet), false);\n        }\n      } else {\n        var _form$getFieldValue;\n\n        value = (_form$getFieldValue = form.getFieldValue) === null || _form$getFieldValue === void 0 ? void 0 : _form$getFieldValue.call(form, pathToGet);\n\n        if (typeof value !== 'undefined') {\n          values = set(values, finalName, value, false);\n        }\n      }\n    }\n\n    return children === null || children === void 0 ? void 0 : children(values, _objectSpread(_objectSpread({}, form), context));\n  });\n};\n\nexport default ProFormDependency;"]},"metadata":{},"sourceType":"module"}