{"ast":null,"code":"import \"antd/es/tooltip/style\";\nimport _Tooltip from \"antd/es/tooltip\";\nimport { CheckOutlined } from '@ant-design/icons';\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\n\nvar BlockCheckbox = function BlockCheckbox(_ref) {\n  var value = _ref.value,\n      configType = _ref.configType,\n      onChange = _ref.onChange,\n      list = _ref.list,\n      prefixCls = _ref.prefixCls;\n  var baseClassName = \"\".concat(prefixCls, \"-drawer-block-checkbox\");\n  var dom = useMemo(function () {\n    var domList = (list || []).map(function (item) {\n      return /*#__PURE__*/React.createElement(_Tooltip, {\n        title: item.title,\n        key: item.key\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames(\"\".concat(baseClassName, \"-item\"), \"\".concat(baseClassName, \"-item-\").concat(item.key), \"\".concat(baseClassName, \"-\").concat(configType, \"-item\")),\n        onClick: function onClick() {\n          return onChange(item.key);\n        }\n      }, /*#__PURE__*/React.createElement(CheckOutlined, {\n        className: \"\".concat(baseClassName, \"-selectIcon\"),\n        style: {\n          display: value === item.key ? 'block' : 'none'\n        }\n      })));\n    });\n    return domList; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value, list === null || list === void 0 ? void 0 : list.length, onChange]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: baseClassName,\n    style: {\n      minHeight: 42\n    }\n  }, dom);\n};\n\nexport default BlockCheckbox;","map":{"version":3,"sources":["/Users/jameszow/Documents/RustWorkSpace/covid-ipfs/covid-ipfs-client/node_modules/@ant-design/pro-layout/es/components/SettingDrawer/BlockCheckbox.js"],"names":["_Tooltip","CheckOutlined","classNames","React","useMemo","BlockCheckbox","_ref","value","configType","onChange","list","prefixCls","baseClassName","concat","dom","domList","map","item","createElement","title","key","className","onClick","style","display","length","minHeight"],"mappings":"AAAA,OAAO,uBAAP;AACA,OAAOA,QAAP,MAAqB,iBAArB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;;AAEA,IAAIC,aAAa,GAAG,SAASA,aAAT,CAAuBC,IAAvB,EAA6B;AAC/C,MAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;AAAA,MACIC,UAAU,GAAGF,IAAI,CAACE,UADtB;AAAA,MAEIC,QAAQ,GAAGH,IAAI,CAACG,QAFpB;AAAA,MAGIC,IAAI,GAAGJ,IAAI,CAACI,IAHhB;AAAA,MAIIC,SAAS,GAAGL,IAAI,CAACK,SAJrB;AAKA,MAAIC,aAAa,GAAG,GAAGC,MAAH,CAAUF,SAAV,EAAqB,wBAArB,CAApB;AACA,MAAIG,GAAG,GAAGV,OAAO,CAAC,YAAY;AAC5B,QAAIW,OAAO,GAAG,CAACL,IAAI,IAAI,EAAT,EAAaM,GAAb,CAAiB,UAAUC,IAAV,EAAgB;AAC7C,aAAO,aAAad,KAAK,CAACe,aAAN,CAAoBlB,QAApB,EAA8B;AAChDmB,QAAAA,KAAK,EAAEF,IAAI,CAACE,KADoC;AAEhDC,QAAAA,GAAG,EAAEH,IAAI,CAACG;AAFsC,OAA9B,EAGjB,aAAajB,KAAK,CAACe,aAAN,CAAoB,KAApB,EAA2B;AACzCG,QAAAA,SAAS,EAAEnB,UAAU,CAAC,GAAGW,MAAH,CAAUD,aAAV,EAAyB,OAAzB,CAAD,EAAoC,GAAGC,MAAH,CAAUD,aAAV,EAAyB,QAAzB,EAAmCC,MAAnC,CAA0CI,IAAI,CAACG,GAA/C,CAApC,EAAyF,GAAGP,MAAH,CAAUD,aAAV,EAAyB,GAAzB,EAA8BC,MAA9B,CAAqCL,UAArC,EAAiD,OAAjD,CAAzF,CADoB;AAEzCc,QAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB;AAC1B,iBAAOb,QAAQ,CAACQ,IAAI,CAACG,GAAN,CAAf;AACD;AAJwC,OAA3B,EAKb,aAAajB,KAAK,CAACe,aAAN,CAAoBjB,aAApB,EAAmC;AACjDoB,QAAAA,SAAS,EAAE,GAAGR,MAAH,CAAUD,aAAV,EAAyB,aAAzB,CADsC;AAEjDW,QAAAA,KAAK,EAAE;AACLC,UAAAA,OAAO,EAAEjB,KAAK,KAAKU,IAAI,CAACG,GAAf,GAAqB,OAArB,GAA+B;AADnC;AAF0C,OAAnC,CALA,CAHI,CAApB;AAcD,KAfa,CAAd;AAgBA,WAAOL,OAAP,CAjB4B,CAiBZ;AACjB,GAlBgB,EAkBd,CAACR,KAAD,EAAQG,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmC,KAAK,CAAxC,GAA4CA,IAAI,CAACe,MAAzD,EAAiEhB,QAAjE,CAlBc,CAAjB;AAmBA,SAAO,aAAaN,KAAK,CAACe,aAAN,CAAoB,KAApB,EAA2B;AAC7CG,IAAAA,SAAS,EAAET,aADkC;AAE7CW,IAAAA,KAAK,EAAE;AACLG,MAAAA,SAAS,EAAE;AADN;AAFsC,GAA3B,EAKjBZ,GALiB,CAApB;AAMD,CAhCD;;AAkCA,eAAeT,aAAf","sourcesContent":["import \"antd/es/tooltip/style\";\nimport _Tooltip from \"antd/es/tooltip\";\nimport { CheckOutlined } from '@ant-design/icons';\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\n\nvar BlockCheckbox = function BlockCheckbox(_ref) {\n  var value = _ref.value,\n      configType = _ref.configType,\n      onChange = _ref.onChange,\n      list = _ref.list,\n      prefixCls = _ref.prefixCls;\n  var baseClassName = \"\".concat(prefixCls, \"-drawer-block-checkbox\");\n  var dom = useMemo(function () {\n    var domList = (list || []).map(function (item) {\n      return /*#__PURE__*/React.createElement(_Tooltip, {\n        title: item.title,\n        key: item.key\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames(\"\".concat(baseClassName, \"-item\"), \"\".concat(baseClassName, \"-item-\").concat(item.key), \"\".concat(baseClassName, \"-\").concat(configType, \"-item\")),\n        onClick: function onClick() {\n          return onChange(item.key);\n        }\n      }, /*#__PURE__*/React.createElement(CheckOutlined, {\n        className: \"\".concat(baseClassName, \"-selectIcon\"),\n        style: {\n          display: value === item.key ? 'block' : 'none'\n        }\n      })));\n    });\n    return domList; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value, list === null || list === void 0 ? void 0 : list.length, onChange]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: baseClassName,\n    style: {\n      minHeight: 42\n    }\n  }, dom);\n};\n\nexport default BlockCheckbox;"]},"metadata":{},"sourceType":"module"}