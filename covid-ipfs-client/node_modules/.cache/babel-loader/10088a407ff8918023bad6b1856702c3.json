{"ast":null,"code":"import { dependency } from './dependency';\nimport { divider } from './divider';\nimport { field } from './field';\nimport { formList } from './formList';\nimport { formSet } from './formSet';\nimport { group } from './group';\nimport { ignore } from './ignore'; // 按照数组顺序执行\n\nvar tasks = [ignore, group, formList, formSet, divider, dependency];\nexport var renderValueType = function renderValueType(item, helpers) {\n  for (var cur = 0; cur < tasks.length; cur++) {\n    var task = tasks[cur];\n    var dom = task(item, helpers); // False 不再遍历\n    // if (dom === false) {\n    //   return false;\n\n    if (dom === true) {\n      // True 继续下一次\n      continue;\n    } else {\n      // Other Is Dom\n      return dom;\n    }\n  } // 最后执行\n\n\n  return field(item, helpers);\n};","map":{"version":3,"sources":["/Users/jameszow/Documents/RustWorkSpace/covid-ipfs/covid-ipfs-client/node_modules/@ant-design/pro-form/es/components/SchemaForm/valueType/index.js"],"names":["dependency","divider","field","formList","formSet","group","ignore","tasks","renderValueType","item","helpers","cur","length","task","dom"],"mappings":"AAAA,SAASA,UAAT,QAA2B,cAA3B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,MAAT,QAAuB,UAAvB,C,CAAmC;;AAEnC,IAAIC,KAAK,GAAG,CAACD,MAAD,EAASD,KAAT,EAAgBF,QAAhB,EAA0BC,OAA1B,EAAmCH,OAAnC,EAA4CD,UAA5C,CAAZ;AACA,OAAO,IAAIQ,eAAe,GAAG,SAASA,eAAT,CAAyBC,IAAzB,EAA+BC,OAA/B,EAAwC;AACnE,OAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGJ,KAAK,CAACK,MAA9B,EAAsCD,GAAG,EAAzC,EAA6C;AAC3C,QAAIE,IAAI,GAAGN,KAAK,CAACI,GAAD,CAAhB;AACA,QAAIG,GAAG,GAAGD,IAAI,CAACJ,IAAD,EAAOC,OAAP,CAAd,CAF2C,CAEZ;AAC/B;AACA;;AAEA,QAAII,GAAG,KAAK,IAAZ,EAAkB;AAChB;AACA;AACD,KAHD,MAGO;AACL;AACA,aAAOA,GAAP;AACD;AACF,GAdkE,CAcjE;;;AAGF,SAAOZ,KAAK,CAACO,IAAD,EAAOC,OAAP,CAAZ;AACD,CAlBM","sourcesContent":["import { dependency } from './dependency';\nimport { divider } from './divider';\nimport { field } from './field';\nimport { formList } from './formList';\nimport { formSet } from './formSet';\nimport { group } from './group';\nimport { ignore } from './ignore'; // 按照数组顺序执行\n\nvar tasks = [ignore, group, formList, formSet, divider, dependency];\nexport var renderValueType = function renderValueType(item, helpers) {\n  for (var cur = 0; cur < tasks.length; cur++) {\n    var task = tasks[cur];\n    var dom = task(item, helpers); // False 不再遍历\n    // if (dom === false) {\n    //   return false;\n\n    if (dom === true) {\n      // True 继续下一次\n      continue;\n    } else {\n      // Other Is Dom\n      return dom;\n    }\n  } // 最后执行\n\n\n  return field(item, helpers);\n};"]},"metadata":{},"sourceType":"module"}