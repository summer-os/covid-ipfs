{"ast":null,"code":"import \"antd/es/checkbox/style\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport \"antd/es/space/style\";\nimport _Space from \"antd/es/space\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/es/config-provider/style\";\nimport _ConfigProvider from \"antd/es/config-provider\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"layout\", \"renderFormItem\", \"mode\", \"render\"];\nimport classNames from 'classnames';\nimport React, { useContext, useImperativeHandle, useRef } from 'react';\nimport { ObjToMap, proFieldParsingText, useFieldFetchData } from '../Select';\nimport './index.less';\n/**\n * 多选组件\n *\n * @param param0\n * @param ref\n */\n\nvar FieldCheckbox = function FieldCheckbox(_ref, ref) {\n  var _ref$layout = _ref.layout,\n      layout = _ref$layout === void 0 ? 'horizontal' : _ref$layout,\n      renderFormItem = _ref.renderFormItem,\n      mode = _ref.mode,\n      render = _ref.render,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useContext = useContext(_ConfigProvider.ConfigContext),\n      getPrefixCls = _useContext.getPrefixCls;\n\n  var layoutClassName = getPrefixCls('pro-field-checkbox');\n\n  var _useFieldFetchData = useFieldFetchData(rest),\n      _useFieldFetchData2 = _slicedToArray(_useFieldFetchData, 3),\n      loading = _useFieldFetchData2[0],\n      options = _useFieldFetchData2[1],\n      _fetchData = _useFieldFetchData2[2];\n\n  var checkBoxRef = useRef();\n  useImperativeHandle(ref, function () {\n    return _objectSpread(_objectSpread({}, checkBoxRef.current || {}), {}, {\n      fetchData: function fetchData() {\n        return _fetchData();\n      }\n    });\n  });\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(_Spin, {\n      size: \"small\"\n    });\n  }\n\n  if (mode === 'read') {\n    var optionsValueEnum = (options === null || options === void 0 ? void 0 : options.length) ? options === null || options === void 0 ? void 0 : options.reduce(function (pre, cur) {\n      var _cur$value;\n\n      return _objectSpread(_objectSpread({}, pre), {}, _defineProperty({}, (_cur$value = cur.value) !== null && _cur$value !== void 0 ? _cur$value : '', cur.label));\n    }, {}) : undefined;\n    var dom = proFieldParsingText(rest.text, ObjToMap(rest.valueEnum || optionsValueEnum));\n\n    if (render) {\n      return render(rest.text, _objectSpread({\n        mode: mode\n      }, rest.fieldProps), /*#__PURE__*/React.createElement(React.Fragment, null, dom)) || null;\n    }\n\n    return /*#__PURE__*/React.createElement(_Space, null, dom);\n  }\n\n  if (mode === 'edit') {\n    var _rest$fieldProps;\n\n    var _dom = /*#__PURE__*/React.createElement(_Checkbox.Group, _extends({}, rest.fieldProps, {\n      className: classNames((_rest$fieldProps = rest.fieldProps) === null || _rest$fieldProps === void 0 ? void 0 : _rest$fieldProps.className, \"\".concat(layoutClassName, \"-\").concat(layout)),\n      options: options\n    }));\n\n    if (renderFormItem) {\n      return renderFormItem(rest.text, _objectSpread({\n        mode: mode\n      }, rest.fieldProps), _dom) || null;\n    }\n\n    return _dom;\n  }\n\n  return null;\n};\n\nexport default /*#__PURE__*/React.forwardRef(FieldCheckbox);","map":{"version":3,"sources":["/Users/jameszow/Documents/RustWorkSpace/covid-ipfs/covid-ipfs-client/node_modules/@ant-design/pro-field/es/components/Checkbox/index.js"],"names":["_Checkbox","_extends","_Space","_defineProperty","_Spin","_objectSpread","_slicedToArray","_ConfigProvider","_objectWithoutProperties","_excluded","classNames","React","useContext","useImperativeHandle","useRef","ObjToMap","proFieldParsingText","useFieldFetchData","FieldCheckbox","_ref","ref","_ref$layout","layout","renderFormItem","mode","render","rest","_useContext","ConfigContext","getPrefixCls","layoutClassName","_useFieldFetchData","_useFieldFetchData2","loading","options","_fetchData","checkBoxRef","current","fetchData","createElement","size","optionsValueEnum","length","reduce","pre","cur","_cur$value","value","label","undefined","dom","text","valueEnum","fieldProps","Fragment","_rest$fieldProps","_dom","Group","className","concat","forwardRef"],"mappings":"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","sourcesContent":["import \"antd/es/checkbox/style\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport \"antd/es/space/style\";\nimport _Space from \"antd/es/space\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/es/config-provider/style\";\nimport _ConfigProvider from \"antd/es/config-provider\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"layout\", \"renderFormItem\", \"mode\", \"render\"];\nimport classNames from 'classnames';\nimport React, { useContext, useImperativeHandle, useRef } from 'react';\nimport { ObjToMap, proFieldParsingText, useFieldFetchData } from '../Select';\nimport './index.less';\n/**\n * 多选组件\n *\n * @param param0\n * @param ref\n */\n\nvar FieldCheckbox = function FieldCheckbox(_ref, ref) {\n  var _ref$layout = _ref.layout,\n      layout = _ref$layout === void 0 ? 'horizontal' : _ref$layout,\n      renderFormItem = _ref.renderFormItem,\n      mode = _ref.mode,\n      render = _ref.render,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useContext = useContext(_ConfigProvider.ConfigContext),\n      getPrefixCls = _useContext.getPrefixCls;\n\n  var layoutClassName = getPrefixCls('pro-field-checkbox');\n\n  var _useFieldFetchData = useFieldFetchData(rest),\n      _useFieldFetchData2 = _slicedToArray(_useFieldFetchData, 3),\n      loading = _useFieldFetchData2[0],\n      options = _useFieldFetchData2[1],\n      _fetchData = _useFieldFetchData2[2];\n\n  var checkBoxRef = useRef();\n  useImperativeHandle(ref, function () {\n    return _objectSpread(_objectSpread({}, checkBoxRef.current || {}), {}, {\n      fetchData: function fetchData() {\n        return _fetchData();\n      }\n    });\n  });\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(_Spin, {\n      size: \"small\"\n    });\n  }\n\n  if (mode === 'read') {\n    var optionsValueEnum = (options === null || options === void 0 ? void 0 : options.length) ? options === null || options === void 0 ? void 0 : options.reduce(function (pre, cur) {\n      var _cur$value;\n\n      return _objectSpread(_objectSpread({}, pre), {}, _defineProperty({}, (_cur$value = cur.value) !== null && _cur$value !== void 0 ? _cur$value : '', cur.label));\n    }, {}) : undefined;\n    var dom = proFieldParsingText(rest.text, ObjToMap(rest.valueEnum || optionsValueEnum));\n\n    if (render) {\n      return render(rest.text, _objectSpread({\n        mode: mode\n      }, rest.fieldProps), /*#__PURE__*/React.createElement(React.Fragment, null, dom)) || null;\n    }\n\n    return /*#__PURE__*/React.createElement(_Space, null, dom);\n  }\n\n  if (mode === 'edit') {\n    var _rest$fieldProps;\n\n    var _dom = /*#__PURE__*/React.createElement(_Checkbox.Group, _extends({}, rest.fieldProps, {\n      className: classNames((_rest$fieldProps = rest.fieldProps) === null || _rest$fieldProps === void 0 ? void 0 : _rest$fieldProps.className, \"\".concat(layoutClassName, \"-\").concat(layout)),\n      options: options\n    }));\n\n    if (renderFormItem) {\n      return renderFormItem(rest.text, _objectSpread({\n        mode: mode\n      }, rest.fieldProps), _dom) || null;\n    }\n\n    return _dom;\n  }\n\n  return null;\n};\n\nexport default /*#__PURE__*/React.forwardRef(FieldCheckbox);"]},"metadata":{},"sourceType":"module"}