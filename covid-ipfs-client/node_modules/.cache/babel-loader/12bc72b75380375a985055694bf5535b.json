{"ast":null,"code":"import \"antd/es/list/style\";\nimport _List from \"antd/es/list\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/es/config-provider/style\";\nimport _ConfigProvider from \"antd/es/config-provider\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"dataSource\", \"columns\", \"rowKey\", \"showActions\", \"showExtra\", \"prefixCls\", \"actionRef\", \"itemTitleRender\", \"renderItem\", \"itemCardProps\", \"itemHeaderRender\", \"expandable\", \"rowSelection\", \"pagination\", \"onRow\", \"onItem\", \"rowClassName\"];\nimport useLazyKVMap from \"antd/es/table/hooks/useLazyKVMap\";\nimport usePagination from \"antd/es/table/hooks/usePagination\";\nimport useSelection from \"antd/es/table/hooks/useSelection\";\nimport classNames from 'classnames';\nimport get from \"rc-util/es/utils/get\";\nimport React, { useContext } from 'react';\nimport { PRO_LIST_KEYS_MAP } from './constants';\nimport ProListItem from './Item';\n\nfunction ListView(props) {\n  var dataSource = props.dataSource,\n      columns = props.columns,\n      rowKey = props.rowKey,\n      showActions = props.showActions,\n      showExtra = props.showExtra,\n      customizePrefixCls = props.prefixCls,\n      actionRef = props.actionRef,\n      itemTitleRender = props.itemTitleRender,\n      _renderItem = props.renderItem,\n      itemCardProps = props.itemCardProps,\n      itemHeaderRender = props.itemHeaderRender,\n      expandableConfig = props.expandable,\n      rowSelection = props.rowSelection,\n      pagination = props.pagination,\n      onRow = props.onRow,\n      onItem = props.onItem,\n      rowClassName = props.rowClassName,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var _useContext = useContext(_ConfigProvider.ConfigContext),\n      getPrefixCls = _useContext.getPrefixCls;\n\n  var getRowKey = React.useMemo(function () {\n    if (typeof rowKey === 'function') {\n      return rowKey;\n    }\n\n    return function (record, index) {\n      return record[rowKey] || index;\n    };\n  }, [rowKey]);\n\n  var _useLazyKVMap = useLazyKVMap(dataSource, 'children', getRowKey),\n      _useLazyKVMap2 = _slicedToArray(_useLazyKVMap, 1),\n      getRecordByKey = _useLazyKVMap2[0]; // 合并分页的的配置\n\n\n  var _usePagination = usePagination(dataSource.length, _objectSpread({\n    responsive: true\n  }, pagination), function () {}),\n      _usePagination2 = _slicedToArray(_usePagination, 1),\n      mergedPagination = _usePagination2[0];\n  /** 根据分页来返回不同的数据，模拟 table */\n\n\n  var pageData = React.useMemo(function () {\n    if (pagination === false || !mergedPagination.pageSize || dataSource.length < mergedPagination.total) {\n      return dataSource;\n    }\n\n    var _mergedPagination$cur = mergedPagination.current,\n        current = _mergedPagination$cur === void 0 ? 1 : _mergedPagination$cur,\n        _mergedPagination$pag = mergedPagination.pageSize,\n        pageSize = _mergedPagination$pag === void 0 ? 10 : _mergedPagination$pag;\n    var currentPageData = dataSource.slice((current - 1) * pageSize, current * pageSize);\n    return currentPageData;\n  }, [dataSource, mergedPagination, pagination]);\n  var prefixCls = getPrefixCls('pro-list', customizePrefixCls);\n  /** 提供和 table 一样的 rowSelection 配置 */\n\n  var _useSelection = useSelection(rowSelection, {\n    getRowKey: getRowKey,\n    getRecordByKey: getRecordByKey,\n    prefixCls: prefixCls,\n    data: dataSource,\n    pageData: pageData,\n    expandType: 'row',\n    childrenColumnName: 'children',\n    locale: {}\n  }),\n      _useSelection2 = _slicedToArray(_useSelection, 2),\n      selectItemRender = _useSelection2[0],\n      selectedKeySet = _useSelection2[1]; // 提供和 Table 一样的 expand 支持\n\n\n  var _ref = expandableConfig || {},\n      expandedRowKeys = _ref.expandedRowKeys,\n      defaultExpandedRowKeys = _ref.defaultExpandedRowKeys,\n      _ref$defaultExpandAll = _ref.defaultExpandAllRows,\n      defaultExpandAllRows = _ref$defaultExpandAll === void 0 ? true : _ref$defaultExpandAll,\n      onExpand = _ref.onExpand,\n      onExpandedRowsChange = _ref.onExpandedRowsChange,\n      rowExpandable = _ref.rowExpandable;\n  /** 展开收起功能区域 star */\n\n\n  var _React$useState = React.useState(function () {\n    if (defaultExpandedRowKeys) {\n      return defaultExpandedRowKeys;\n    }\n\n    if (defaultExpandAllRows !== false) {\n      return dataSource.map(getRowKey);\n    }\n\n    return [];\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      innerExpandedKeys = _React$useState2[0],\n      setInnerExpandedKeys = _React$useState2[1];\n\n  var mergedExpandedKeys = React.useMemo(function () {\n    return new Set(expandedRowKeys || innerExpandedKeys || []);\n  }, [expandedRowKeys, innerExpandedKeys]);\n  var onTriggerExpand = React.useCallback(function (record) {\n    var key = getRowKey(record, dataSource.indexOf(record));\n    var newExpandedKeys;\n    var hasKey = mergedExpandedKeys.has(key);\n\n    if (hasKey) {\n      mergedExpandedKeys.delete(key);\n      newExpandedKeys = _toConsumableArray(mergedExpandedKeys);\n    } else {\n      newExpandedKeys = [].concat(_toConsumableArray(mergedExpandedKeys), [key]);\n    }\n\n    setInnerExpandedKeys(newExpandedKeys);\n\n    if (onExpand) {\n      onExpand(!hasKey, record);\n    }\n\n    if (onExpandedRowsChange) {\n      onExpandedRowsChange(newExpandedKeys);\n    }\n  }, [getRowKey, mergedExpandedKeys, dataSource, onExpand, onExpandedRowsChange]);\n  /** 展开收起功能区域 end */\n\n  /** 这个是 选择框的 render 方法 为了兼容 antd 的 table,用了同样的渲染逻辑 所以看起来有点奇怪 */\n\n  var selectItemDom = selectItemRender([])[0];\n  return /*#__PURE__*/React.createElement(_List, _extends({}, rest, {\n    className: classNames(getPrefixCls('pro-list-container', customizePrefixCls), rest.className),\n    dataSource: pageData,\n    pagination: pagination && mergedPagination,\n    renderItem: function renderItem(item, index) {\n      var _actionRef$current, _checkboxDom, _checkboxDom$props;\n\n      var listItemProps = {\n        className: typeof rowClassName === 'function' ? rowClassName(item, index) : rowClassName\n      };\n      columns === null || columns === void 0 ? void 0 : columns.forEach(function (column) {\n        var listKey = column.listKey,\n            cardActionProps = column.cardActionProps;\n\n        if (!PRO_LIST_KEYS_MAP.has(listKey)) {\n          return;\n        }\n\n        var dataIndex = column.dataIndex || listKey || column.key;\n        var rawData = Array.isArray(dataIndex) ? get(item, dataIndex) : item[dataIndex];\n        /** 如果cardActionProps 需要直接使用源数组，因为 action 必须要源数组 */\n\n        if (cardActionProps === 'actions' && listKey === 'actions') {\n          listItemProps.cardActionProps = cardActionProps;\n        } // 调用protable的列配置渲染数据\n\n\n        var data = column.render ? column.render(rawData, item, index) : rawData;\n        if (data !== '-') listItemProps[column.listKey] = data;\n      });\n      var checkboxDom;\n\n      if (selectItemDom && selectItemDom.render) {\n        checkboxDom = selectItemDom.render(item, item, index) || undefined;\n      }\n\n      var _ref2 = ((_actionRef$current = actionRef.current) === null || _actionRef$current === void 0 ? void 0 : _actionRef$current.isEditable(_objectSpread(_objectSpread({}, item), {}, {\n        index: index\n      }))) || {},\n          isEditable = _ref2.isEditable,\n          recordKey = _ref2.recordKey;\n\n      var isChecked = selectedKeySet.has(recordKey || index);\n      var defaultDom = /*#__PURE__*/React.createElement(ProListItem, _extends({\n        key: recordKey,\n        cardProps: rest.grid ? _objectSpread(_objectSpread(_objectSpread({}, itemCardProps), rest.grid), {}, {\n          checked: isChecked,\n          onChecked: /*#__PURE__*/React.isValidElement(checkboxDom) ? (_checkboxDom = checkboxDom) === null || _checkboxDom === void 0 ? void 0 : (_checkboxDom$props = _checkboxDom.props) === null || _checkboxDom$props === void 0 ? void 0 : _checkboxDom$props.onChange : undefined\n        }) : undefined\n      }, listItemProps, {\n        recordKey: recordKey,\n        isEditable: isEditable || false,\n        expandable: expandableConfig,\n        expand: mergedExpandedKeys.has(getRowKey(item, index)),\n        onExpand: function onExpand() {\n          onTriggerExpand(item);\n        },\n        index: index,\n        record: item,\n        item: item,\n        showActions: showActions,\n        showExtra: showExtra,\n        itemTitleRender: itemTitleRender,\n        itemHeaderRender: itemHeaderRender,\n        rowSupportExpand: !rowExpandable || rowExpandable && rowExpandable(item),\n        selected: selectedKeySet.has(getRowKey(item, index)),\n        checkbox: checkboxDom,\n        onRow: onRow,\n        onItem: onItem\n      }));\n\n      if (_renderItem) {\n        return _renderItem(item, index, defaultDom);\n      }\n\n      return defaultDom;\n    }\n  }));\n}\n\nexport default ListView;","map":{"version":3,"sources":["/Users/jameszow/Documents/RustWorkSpace/covid-ipfs/covid-ipfs-client/node_modules/@ant-design/pro-list/es/ListView.js"],"names":["_List","_extends","_toConsumableArray","_objectSpread","_slicedToArray","_ConfigProvider","_objectWithoutProperties","_excluded","useLazyKVMap","usePagination","useSelection","classNames","get","React","useContext","PRO_LIST_KEYS_MAP","ProListItem","ListView","props","dataSource","columns","rowKey","showActions","showExtra","customizePrefixCls","prefixCls","actionRef","itemTitleRender","_renderItem","renderItem","itemCardProps","itemHeaderRender","expandableConfig","expandable","rowSelection","pagination","onRow","onItem","rowClassName","rest","_useContext","ConfigContext","getPrefixCls","getRowKey","useMemo","record","index","_useLazyKVMap","_useLazyKVMap2","getRecordByKey","_usePagination","length","responsive","_usePagination2","mergedPagination","pageData","pageSize","total","_mergedPagination$cur","current","_mergedPagination$pag","currentPageData","slice","_useSelection","data","expandType","childrenColumnName","locale","_useSelection2","selectItemRender","selectedKeySet","_ref","expandedRowKeys","defaultExpandedRowKeys","_ref$defaultExpandAll","defaultExpandAllRows","onExpand","onExpandedRowsChange","rowExpandable","_React$useState","useState","map","_React$useState2","innerExpandedKeys","setInnerExpandedKeys","mergedExpandedKeys","Set","onTriggerExpand","useCallback","key","indexOf","newExpandedKeys","hasKey","has","delete","concat","selectItemDom","createElement","className","item","_actionRef$current","_checkboxDom","_checkboxDom$props","listItemProps","forEach","column","listKey","cardActionProps","dataIndex","rawData","Array","isArray","render","checkboxDom","undefined","_ref2","isEditable","recordKey","isChecked","defaultDom","cardProps","grid","checked","onChecked","isValidElement","onChange","expand","rowSupportExpand","selected","checkbox"],"mappings":"AAAA,OAAO,oBAAP;AACA,OAAOA,KAAP,MAAkB,cAAlB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,kBAAP,MAA+B,8CAA/B;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,OAAO,+BAAP;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,OAAOC,wBAAP,MAAqC,oDAArC;AACA,IAAIC,SAAS,GAAG,CAAC,YAAD,EAAe,SAAf,EAA0B,QAA1B,EAAoC,aAApC,EAAmD,WAAnD,EAAgE,WAAhE,EAA6E,WAA7E,EAA0F,iBAA1F,EAA6G,YAA7G,EAA2H,eAA3H,EAA4I,kBAA5I,EAAgK,YAAhK,EAA8K,cAA9K,EAA8L,YAA9L,EAA4M,OAA5M,EAAqN,QAArN,EAA+N,cAA/N,CAAhB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,iBAAT,QAAkC,aAAlC;AACA,OAAOC,WAAP,MAAwB,QAAxB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,MAAIC,UAAU,GAAGD,KAAK,CAACC,UAAvB;AAAA,MACIC,OAAO,GAAGF,KAAK,CAACE,OADpB;AAAA,MAEIC,MAAM,GAAGH,KAAK,CAACG,MAFnB;AAAA,MAGIC,WAAW,GAAGJ,KAAK,CAACI,WAHxB;AAAA,MAIIC,SAAS,GAAGL,KAAK,CAACK,SAJtB;AAAA,MAKIC,kBAAkB,GAAGN,KAAK,CAACO,SAL/B;AAAA,MAMIC,SAAS,GAAGR,KAAK,CAACQ,SANtB;AAAA,MAOIC,eAAe,GAAGT,KAAK,CAACS,eAP5B;AAAA,MAQIC,WAAW,GAAGV,KAAK,CAACW,UARxB;AAAA,MASIC,aAAa,GAAGZ,KAAK,CAACY,aAT1B;AAAA,MAUIC,gBAAgB,GAAGb,KAAK,CAACa,gBAV7B;AAAA,MAWIC,gBAAgB,GAAGd,KAAK,CAACe,UAX7B;AAAA,MAYIC,YAAY,GAAGhB,KAAK,CAACgB,YAZzB;AAAA,MAaIC,UAAU,GAAGjB,KAAK,CAACiB,UAbvB;AAAA,MAcIC,KAAK,GAAGlB,KAAK,CAACkB,KAdlB;AAAA,MAeIC,MAAM,GAAGnB,KAAK,CAACmB,MAfnB;AAAA,MAgBIC,YAAY,GAAGpB,KAAK,CAACoB,YAhBzB;AAAA,MAiBIC,IAAI,GAAGjC,wBAAwB,CAACY,KAAD,EAAQX,SAAR,CAjBnC;;AAmBA,MAAIiC,WAAW,GAAG1B,UAAU,CAACT,eAAe,CAACoC,aAAjB,CAA5B;AAAA,MACIC,YAAY,GAAGF,WAAW,CAACE,YAD/B;;AAGA,MAAIC,SAAS,GAAG9B,KAAK,CAAC+B,OAAN,CAAc,YAAY;AACxC,QAAI,OAAOvB,MAAP,KAAkB,UAAtB,EAAkC;AAChC,aAAOA,MAAP;AACD;;AAED,WAAO,UAAUwB,MAAV,EAAkBC,KAAlB,EAAyB;AAC9B,aAAOD,MAAM,CAACxB,MAAD,CAAN,IAAkByB,KAAzB;AACD,KAFD;AAGD,GARe,EAQb,CAACzB,MAAD,CARa,CAAhB;;AAUA,MAAI0B,aAAa,GAAGvC,YAAY,CAACW,UAAD,EAAa,UAAb,EAAyBwB,SAAzB,CAAhC;AAAA,MACIK,cAAc,GAAG5C,cAAc,CAAC2C,aAAD,EAAgB,CAAhB,CADnC;AAAA,MAEIE,cAAc,GAAGD,cAAc,CAAC,CAAD,CAFnC,CAjCuB,CAmCiB;;;AAGxC,MAAIE,cAAc,GAAGzC,aAAa,CAACU,UAAU,CAACgC,MAAZ,EAAoBhD,aAAa,CAAC;AAClEiD,IAAAA,UAAU,EAAE;AADsD,GAAD,EAEhEjB,UAFgE,CAAjC,EAElB,YAAY,CAAE,CAFI,CAAlC;AAAA,MAGIkB,eAAe,GAAGjD,cAAc,CAAC8C,cAAD,EAAiB,CAAjB,CAHpC;AAAA,MAIII,gBAAgB,GAAGD,eAAe,CAAC,CAAD,CAJtC;AAKA;;;AAGA,MAAIE,QAAQ,GAAG1C,KAAK,CAAC+B,OAAN,CAAc,YAAY;AACvC,QAAIT,UAAU,KAAK,KAAf,IAAwB,CAACmB,gBAAgB,CAACE,QAA1C,IAAsDrC,UAAU,CAACgC,MAAX,GAAoBG,gBAAgB,CAACG,KAA/F,EAAsG;AACpG,aAAOtC,UAAP;AACD;;AAED,QAAIuC,qBAAqB,GAAGJ,gBAAgB,CAACK,OAA7C;AAAA,QACIA,OAAO,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,CAAnC,GAAuCA,qBADrD;AAAA,QAEIE,qBAAqB,GAAGN,gBAAgB,CAACE,QAF7C;AAAA,QAGIA,QAAQ,GAAGI,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,EAAnC,GAAwCA,qBAHvD;AAIA,QAAIC,eAAe,GAAG1C,UAAU,CAAC2C,KAAX,CAAiB,CAACH,OAAO,GAAG,CAAX,IAAgBH,QAAjC,EAA2CG,OAAO,GAAGH,QAArD,CAAtB;AACA,WAAOK,eAAP;AACD,GAXc,EAWZ,CAAC1C,UAAD,EAAamC,gBAAb,EAA+BnB,UAA/B,CAXY,CAAf;AAYA,MAAIV,SAAS,GAAGiB,YAAY,CAAC,UAAD,EAAalB,kBAAb,CAA5B;AACA;;AAEA,MAAIuC,aAAa,GAAGrD,YAAY,CAACwB,YAAD,EAAe;AAC7CS,IAAAA,SAAS,EAAEA,SADkC;AAE7CM,IAAAA,cAAc,EAAEA,cAF6B;AAG7CxB,IAAAA,SAAS,EAAEA,SAHkC;AAI7CuC,IAAAA,IAAI,EAAE7C,UAJuC;AAK7CoC,IAAAA,QAAQ,EAAEA,QALmC;AAM7CU,IAAAA,UAAU,EAAE,KANiC;AAO7CC,IAAAA,kBAAkB,EAAE,UAPyB;AAQ7CC,IAAAA,MAAM,EAAE;AARqC,GAAf,CAAhC;AAAA,MAUIC,cAAc,GAAGhE,cAAc,CAAC2D,aAAD,EAAgB,CAAhB,CAVnC;AAAA,MAWIM,gBAAgB,GAAGD,cAAc,CAAC,CAAD,CAXrC;AAAA,MAYIE,cAAc,GAAGF,cAAc,CAAC,CAAD,CAZnC,CA7DuB,CAyEiB;;;AAGxC,MAAIG,IAAI,GAAGvC,gBAAgB,IAAI,EAA/B;AAAA,MACIwC,eAAe,GAAGD,IAAI,CAACC,eAD3B;AAAA,MAEIC,sBAAsB,GAAGF,IAAI,CAACE,sBAFlC;AAAA,MAGIC,qBAAqB,GAAGH,IAAI,CAACI,oBAHjC;AAAA,MAIIA,oBAAoB,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,IAAnC,GAA0CA,qBAJrE;AAAA,MAKIE,QAAQ,GAAGL,IAAI,CAACK,QALpB;AAAA,MAMIC,oBAAoB,GAAGN,IAAI,CAACM,oBANhC;AAAA,MAOIC,aAAa,GAAGP,IAAI,CAACO,aAPzB;AAQA;;;AAGA,MAAIC,eAAe,GAAGlE,KAAK,CAACmE,QAAN,CAAe,YAAY;AAC/C,QAAIP,sBAAJ,EAA4B;AAC1B,aAAOA,sBAAP;AACD;;AAED,QAAIE,oBAAoB,KAAK,KAA7B,EAAoC;AAClC,aAAOxD,UAAU,CAAC8D,GAAX,CAAetC,SAAf,CAAP;AACD;;AAED,WAAO,EAAP;AACD,GAVqB,CAAtB;AAAA,MAWIuC,gBAAgB,GAAG9E,cAAc,CAAC2E,eAAD,EAAkB,CAAlB,CAXrC;AAAA,MAYII,iBAAiB,GAAGD,gBAAgB,CAAC,CAAD,CAZxC;AAAA,MAaIE,oBAAoB,GAAGF,gBAAgB,CAAC,CAAD,CAb3C;;AAeA,MAAIG,kBAAkB,GAAGxE,KAAK,CAAC+B,OAAN,CAAc,YAAY;AACjD,WAAO,IAAI0C,GAAJ,CAAQd,eAAe,IAAIW,iBAAnB,IAAwC,EAAhD,CAAP;AACD,GAFwB,EAEtB,CAACX,eAAD,EAAkBW,iBAAlB,CAFsB,CAAzB;AAGA,MAAII,eAAe,GAAG1E,KAAK,CAAC2E,WAAN,CAAkB,UAAU3C,MAAV,EAAkB;AACxD,QAAI4C,GAAG,GAAG9C,SAAS,CAACE,MAAD,EAAS1B,UAAU,CAACuE,OAAX,CAAmB7C,MAAnB,CAAT,CAAnB;AACA,QAAI8C,eAAJ;AACA,QAAIC,MAAM,GAAGP,kBAAkB,CAACQ,GAAnB,CAAuBJ,GAAvB,CAAb;;AAEA,QAAIG,MAAJ,EAAY;AACVP,MAAAA,kBAAkB,CAACS,MAAnB,CAA0BL,GAA1B;AACAE,MAAAA,eAAe,GAAGzF,kBAAkB,CAACmF,kBAAD,CAApC;AACD,KAHD,MAGO;AACLM,MAAAA,eAAe,GAAG,GAAGI,MAAH,CAAU7F,kBAAkB,CAACmF,kBAAD,CAA5B,EAAkD,CAACI,GAAD,CAAlD,CAAlB;AACD;;AAEDL,IAAAA,oBAAoB,CAACO,eAAD,CAApB;;AAEA,QAAIf,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAAC,CAACgB,MAAF,EAAU/C,MAAV,CAAR;AACD;;AAED,QAAIgC,oBAAJ,EAA0B;AACxBA,MAAAA,oBAAoB,CAACc,eAAD,CAApB;AACD;AACF,GArBqB,EAqBnB,CAAChD,SAAD,EAAY0C,kBAAZ,EAAgClE,UAAhC,EAA4CyD,QAA5C,EAAsDC,oBAAtD,CArBmB,CAAtB;AAsBA;;AAEA;;AAEA,MAAImB,aAAa,GAAG3B,gBAAgB,CAAC,EAAD,CAAhB,CAAqB,CAArB,CAApB;AACA,SAAO,aAAaxD,KAAK,CAACoF,aAAN,CAAoBjG,KAApB,EAA2BC,QAAQ,CAAC,EAAD,EAAKsC,IAAL,EAAW;AAChE2D,IAAAA,SAAS,EAAEvF,UAAU,CAAC+B,YAAY,CAAC,oBAAD,EAAuBlB,kBAAvB,CAAb,EAAyDe,IAAI,CAAC2D,SAA9D,CAD2C;AAEhE/E,IAAAA,UAAU,EAAEoC,QAFoD;AAGhEpB,IAAAA,UAAU,EAAEA,UAAU,IAAImB,gBAHsC;AAIhEzB,IAAAA,UAAU,EAAE,SAASA,UAAT,CAAoBsE,IAApB,EAA0BrD,KAA1B,EAAiC;AAC3C,UAAIsD,kBAAJ,EAAwBC,YAAxB,EAAsCC,kBAAtC;;AAEA,UAAIC,aAAa,GAAG;AAClBL,QAAAA,SAAS,EAAE,OAAO5D,YAAP,KAAwB,UAAxB,GAAqCA,YAAY,CAAC6D,IAAD,EAAOrD,KAAP,CAAjD,GAAiER;AAD1D,OAApB;AAGAlB,MAAAA,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACoF,OAAR,CAAgB,UAAUC,MAAV,EAAkB;AAClF,YAAIC,OAAO,GAAGD,MAAM,CAACC,OAArB;AAAA,YACIC,eAAe,GAAGF,MAAM,CAACE,eAD7B;;AAGA,YAAI,CAAC5F,iBAAiB,CAAC8E,GAAlB,CAAsBa,OAAtB,CAAL,EAAqC;AACnC;AACD;;AAED,YAAIE,SAAS,GAAGH,MAAM,CAACG,SAAP,IAAoBF,OAApB,IAA+BD,MAAM,CAAChB,GAAtD;AACA,YAAIoB,OAAO,GAAGC,KAAK,CAACC,OAAN,CAAcH,SAAd,IAA2BhG,GAAG,CAACuF,IAAD,EAAOS,SAAP,CAA9B,GAAkDT,IAAI,CAACS,SAAD,CAApE;AACA;;AAEA,YAAID,eAAe,KAAK,SAApB,IAAiCD,OAAO,KAAK,SAAjD,EAA4D;AAC1DH,UAAAA,aAAa,CAACI,eAAd,GAAgCA,eAAhC;AACD,SAdiF,CAchF;;;AAGF,YAAI3C,IAAI,GAAGyC,MAAM,CAACO,MAAP,GAAgBP,MAAM,CAACO,MAAP,CAAcH,OAAd,EAAuBV,IAAvB,EAA6BrD,KAA7B,CAAhB,GAAsD+D,OAAjE;AACA,YAAI7C,IAAI,KAAK,GAAb,EAAkBuC,aAAa,CAACE,MAAM,CAACC,OAAR,CAAb,GAAgC1C,IAAhC;AACnB,OAnBiD,CAAlD;AAoBA,UAAIiD,WAAJ;;AAEA,UAAIjB,aAAa,IAAIA,aAAa,CAACgB,MAAnC,EAA2C;AACzCC,QAAAA,WAAW,GAAGjB,aAAa,CAACgB,MAAd,CAAqBb,IAArB,EAA2BA,IAA3B,EAAiCrD,KAAjC,KAA2CoE,SAAzD;AACD;;AAED,UAAIC,KAAK,GAAG,CAAC,CAACf,kBAAkB,GAAG1E,SAAS,CAACiC,OAAhC,MAA6C,IAA7C,IAAqDyC,kBAAkB,KAAK,KAAK,CAAjF,GAAqF,KAAK,CAA1F,GAA8FA,kBAAkB,CAACgB,UAAnB,CAA8BjH,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKgG,IAAL,CAAd,EAA0B,EAA1B,EAA8B;AAClLrD,QAAAA,KAAK,EAAEA;AAD2K,OAA9B,CAA3C,CAA/F,KAEJ,EAFR;AAAA,UAGIsE,UAAU,GAAGD,KAAK,CAACC,UAHvB;AAAA,UAIIC,SAAS,GAAGF,KAAK,CAACE,SAJtB;;AAMA,UAAIC,SAAS,GAAGhD,cAAc,CAACuB,GAAf,CAAmBwB,SAAS,IAAIvE,KAAhC,CAAhB;AACA,UAAIyE,UAAU,GAAG,aAAa1G,KAAK,CAACoF,aAAN,CAAoBjF,WAApB,EAAiCf,QAAQ,CAAC;AACtEwF,QAAAA,GAAG,EAAE4B,SADiE;AAEtEG,QAAAA,SAAS,EAAEjF,IAAI,CAACkF,IAAL,GAAYtH,aAAa,CAACA,aAAa,CAACA,aAAa,CAAC,EAAD,EAAK2B,aAAL,CAAd,EAAmCS,IAAI,CAACkF,IAAxC,CAAd,EAA6D,EAA7D,EAAiE;AACnGC,UAAAA,OAAO,EAAEJ,SAD0F;AAEnGK,UAAAA,SAAS,EAAE,aAAa9G,KAAK,CAAC+G,cAAN,CAAqBX,WAArB,IAAoC,CAACZ,YAAY,GAAGY,WAAhB,MAAiC,IAAjC,IAAyCZ,YAAY,KAAK,KAAK,CAA/D,GAAmE,KAAK,CAAxE,GAA4E,CAACC,kBAAkB,GAAGD,YAAY,CAACnF,KAAnC,MAA8C,IAA9C,IAAsDoF,kBAAkB,KAAK,KAAK,CAAlF,GAAsF,KAAK,CAA3F,GAA+FA,kBAAkB,CAACuB,QAAlO,GAA6OX;AAFlK,SAAjE,CAAzB,GAGNA;AALiE,OAAD,EAMpEX,aANoE,EAMrD;AAChBc,QAAAA,SAAS,EAAEA,SADK;AAEhBD,QAAAA,UAAU,EAAEA,UAAU,IAAI,KAFV;AAGhBnF,QAAAA,UAAU,EAAED,gBAHI;AAIhB8F,QAAAA,MAAM,EAAEzC,kBAAkB,CAACQ,GAAnB,CAAuBlD,SAAS,CAACwD,IAAD,EAAOrD,KAAP,CAAhC,CAJQ;AAKhB8B,QAAAA,QAAQ,EAAE,SAASA,QAAT,GAAoB;AAC5BW,UAAAA,eAAe,CAACY,IAAD,CAAf;AACD,SAPe;AAQhBrD,QAAAA,KAAK,EAAEA,KARS;AAShBD,QAAAA,MAAM,EAAEsD,IATQ;AAUhBA,QAAAA,IAAI,EAAEA,IAVU;AAWhB7E,QAAAA,WAAW,EAAEA,WAXG;AAYhBC,QAAAA,SAAS,EAAEA,SAZK;AAahBI,QAAAA,eAAe,EAAEA,eAbD;AAchBI,QAAAA,gBAAgB,EAAEA,gBAdF;AAehBgG,QAAAA,gBAAgB,EAAE,CAACjD,aAAD,IAAkBA,aAAa,IAAIA,aAAa,CAACqB,IAAD,CAflD;AAgBhB6B,QAAAA,QAAQ,EAAE1D,cAAc,CAACuB,GAAf,CAAmBlD,SAAS,CAACwD,IAAD,EAAOrD,KAAP,CAA5B,CAhBM;AAiBhBmF,QAAAA,QAAQ,EAAEhB,WAjBM;AAkBhB7E,QAAAA,KAAK,EAAEA,KAlBS;AAmBhBC,QAAAA,MAAM,EAAEA;AAnBQ,OANqD,CAAzC,CAA9B;;AA4BA,UAAIT,WAAJ,EAAiB;AACf,eAAOA,WAAW,CAACuE,IAAD,EAAOrD,KAAP,EAAcyE,UAAd,CAAlB;AACD;;AAED,aAAOA,UAAP;AACD;AA5E+D,GAAX,CAAnC,CAApB;AA8ED;;AAED,eAAetG,QAAf","sourcesContent":["import \"antd/es/list/style\";\nimport _List from \"antd/es/list\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/es/config-provider/style\";\nimport _ConfigProvider from \"antd/es/config-provider\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"dataSource\", \"columns\", \"rowKey\", \"showActions\", \"showExtra\", \"prefixCls\", \"actionRef\", \"itemTitleRender\", \"renderItem\", \"itemCardProps\", \"itemHeaderRender\", \"expandable\", \"rowSelection\", \"pagination\", \"onRow\", \"onItem\", \"rowClassName\"];\nimport useLazyKVMap from \"antd/es/table/hooks/useLazyKVMap\";\nimport usePagination from \"antd/es/table/hooks/usePagination\";\nimport useSelection from \"antd/es/table/hooks/useSelection\";\nimport classNames from 'classnames';\nimport get from \"rc-util/es/utils/get\";\nimport React, { useContext } from 'react';\nimport { PRO_LIST_KEYS_MAP } from './constants';\nimport ProListItem from './Item';\n\nfunction ListView(props) {\n  var dataSource = props.dataSource,\n      columns = props.columns,\n      rowKey = props.rowKey,\n      showActions = props.showActions,\n      showExtra = props.showExtra,\n      customizePrefixCls = props.prefixCls,\n      actionRef = props.actionRef,\n      itemTitleRender = props.itemTitleRender,\n      _renderItem = props.renderItem,\n      itemCardProps = props.itemCardProps,\n      itemHeaderRender = props.itemHeaderRender,\n      expandableConfig = props.expandable,\n      rowSelection = props.rowSelection,\n      pagination = props.pagination,\n      onRow = props.onRow,\n      onItem = props.onItem,\n      rowClassName = props.rowClassName,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var _useContext = useContext(_ConfigProvider.ConfigContext),\n      getPrefixCls = _useContext.getPrefixCls;\n\n  var getRowKey = React.useMemo(function () {\n    if (typeof rowKey === 'function') {\n      return rowKey;\n    }\n\n    return function (record, index) {\n      return record[rowKey] || index;\n    };\n  }, [rowKey]);\n\n  var _useLazyKVMap = useLazyKVMap(dataSource, 'children', getRowKey),\n      _useLazyKVMap2 = _slicedToArray(_useLazyKVMap, 1),\n      getRecordByKey = _useLazyKVMap2[0]; // 合并分页的的配置\n\n\n  var _usePagination = usePagination(dataSource.length, _objectSpread({\n    responsive: true\n  }, pagination), function () {}),\n      _usePagination2 = _slicedToArray(_usePagination, 1),\n      mergedPagination = _usePagination2[0];\n  /** 根据分页来返回不同的数据，模拟 table */\n\n\n  var pageData = React.useMemo(function () {\n    if (pagination === false || !mergedPagination.pageSize || dataSource.length < mergedPagination.total) {\n      return dataSource;\n    }\n\n    var _mergedPagination$cur = mergedPagination.current,\n        current = _mergedPagination$cur === void 0 ? 1 : _mergedPagination$cur,\n        _mergedPagination$pag = mergedPagination.pageSize,\n        pageSize = _mergedPagination$pag === void 0 ? 10 : _mergedPagination$pag;\n    var currentPageData = dataSource.slice((current - 1) * pageSize, current * pageSize);\n    return currentPageData;\n  }, [dataSource, mergedPagination, pagination]);\n  var prefixCls = getPrefixCls('pro-list', customizePrefixCls);\n  /** 提供和 table 一样的 rowSelection 配置 */\n\n  var _useSelection = useSelection(rowSelection, {\n    getRowKey: getRowKey,\n    getRecordByKey: getRecordByKey,\n    prefixCls: prefixCls,\n    data: dataSource,\n    pageData: pageData,\n    expandType: 'row',\n    childrenColumnName: 'children',\n    locale: {}\n  }),\n      _useSelection2 = _slicedToArray(_useSelection, 2),\n      selectItemRender = _useSelection2[0],\n      selectedKeySet = _useSelection2[1]; // 提供和 Table 一样的 expand 支持\n\n\n  var _ref = expandableConfig || {},\n      expandedRowKeys = _ref.expandedRowKeys,\n      defaultExpandedRowKeys = _ref.defaultExpandedRowKeys,\n      _ref$defaultExpandAll = _ref.defaultExpandAllRows,\n      defaultExpandAllRows = _ref$defaultExpandAll === void 0 ? true : _ref$defaultExpandAll,\n      onExpand = _ref.onExpand,\n      onExpandedRowsChange = _ref.onExpandedRowsChange,\n      rowExpandable = _ref.rowExpandable;\n  /** 展开收起功能区域 star */\n\n\n  var _React$useState = React.useState(function () {\n    if (defaultExpandedRowKeys) {\n      return defaultExpandedRowKeys;\n    }\n\n    if (defaultExpandAllRows !== false) {\n      return dataSource.map(getRowKey);\n    }\n\n    return [];\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      innerExpandedKeys = _React$useState2[0],\n      setInnerExpandedKeys = _React$useState2[1];\n\n  var mergedExpandedKeys = React.useMemo(function () {\n    return new Set(expandedRowKeys || innerExpandedKeys || []);\n  }, [expandedRowKeys, innerExpandedKeys]);\n  var onTriggerExpand = React.useCallback(function (record) {\n    var key = getRowKey(record, dataSource.indexOf(record));\n    var newExpandedKeys;\n    var hasKey = mergedExpandedKeys.has(key);\n\n    if (hasKey) {\n      mergedExpandedKeys.delete(key);\n      newExpandedKeys = _toConsumableArray(mergedExpandedKeys);\n    } else {\n      newExpandedKeys = [].concat(_toConsumableArray(mergedExpandedKeys), [key]);\n    }\n\n    setInnerExpandedKeys(newExpandedKeys);\n\n    if (onExpand) {\n      onExpand(!hasKey, record);\n    }\n\n    if (onExpandedRowsChange) {\n      onExpandedRowsChange(newExpandedKeys);\n    }\n  }, [getRowKey, mergedExpandedKeys, dataSource, onExpand, onExpandedRowsChange]);\n  /** 展开收起功能区域 end */\n\n  /** 这个是 选择框的 render 方法 为了兼容 antd 的 table,用了同样的渲染逻辑 所以看起来有点奇怪 */\n\n  var selectItemDom = selectItemRender([])[0];\n  return /*#__PURE__*/React.createElement(_List, _extends({}, rest, {\n    className: classNames(getPrefixCls('pro-list-container', customizePrefixCls), rest.className),\n    dataSource: pageData,\n    pagination: pagination && mergedPagination,\n    renderItem: function renderItem(item, index) {\n      var _actionRef$current, _checkboxDom, _checkboxDom$props;\n\n      var listItemProps = {\n        className: typeof rowClassName === 'function' ? rowClassName(item, index) : rowClassName\n      };\n      columns === null || columns === void 0 ? void 0 : columns.forEach(function (column) {\n        var listKey = column.listKey,\n            cardActionProps = column.cardActionProps;\n\n        if (!PRO_LIST_KEYS_MAP.has(listKey)) {\n          return;\n        }\n\n        var dataIndex = column.dataIndex || listKey || column.key;\n        var rawData = Array.isArray(dataIndex) ? get(item, dataIndex) : item[dataIndex];\n        /** 如果cardActionProps 需要直接使用源数组，因为 action 必须要源数组 */\n\n        if (cardActionProps === 'actions' && listKey === 'actions') {\n          listItemProps.cardActionProps = cardActionProps;\n        } // 调用protable的列配置渲染数据\n\n\n        var data = column.render ? column.render(rawData, item, index) : rawData;\n        if (data !== '-') listItemProps[column.listKey] = data;\n      });\n      var checkboxDom;\n\n      if (selectItemDom && selectItemDom.render) {\n        checkboxDom = selectItemDom.render(item, item, index) || undefined;\n      }\n\n      var _ref2 = ((_actionRef$current = actionRef.current) === null || _actionRef$current === void 0 ? void 0 : _actionRef$current.isEditable(_objectSpread(_objectSpread({}, item), {}, {\n        index: index\n      }))) || {},\n          isEditable = _ref2.isEditable,\n          recordKey = _ref2.recordKey;\n\n      var isChecked = selectedKeySet.has(recordKey || index);\n      var defaultDom = /*#__PURE__*/React.createElement(ProListItem, _extends({\n        key: recordKey,\n        cardProps: rest.grid ? _objectSpread(_objectSpread(_objectSpread({}, itemCardProps), rest.grid), {}, {\n          checked: isChecked,\n          onChecked: /*#__PURE__*/React.isValidElement(checkboxDom) ? (_checkboxDom = checkboxDom) === null || _checkboxDom === void 0 ? void 0 : (_checkboxDom$props = _checkboxDom.props) === null || _checkboxDom$props === void 0 ? void 0 : _checkboxDom$props.onChange : undefined\n        }) : undefined\n      }, listItemProps, {\n        recordKey: recordKey,\n        isEditable: isEditable || false,\n        expandable: expandableConfig,\n        expand: mergedExpandedKeys.has(getRowKey(item, index)),\n        onExpand: function onExpand() {\n          onTriggerExpand(item);\n        },\n        index: index,\n        record: item,\n        item: item,\n        showActions: showActions,\n        showExtra: showExtra,\n        itemTitleRender: itemTitleRender,\n        itemHeaderRender: itemHeaderRender,\n        rowSupportExpand: !rowExpandable || rowExpandable && rowExpandable(item),\n        selected: selectedKeySet.has(getRowKey(item, index)),\n        checkbox: checkboxDom,\n        onRow: onRow,\n        onItem: onItem\n      }));\n\n      if (_renderItem) {\n        return _renderItem(item, index, defaultDom);\n      }\n\n      return defaultDom;\n    }\n  }));\n}\n\nexport default ListView;"]},"metadata":{},"sourceType":"module"}