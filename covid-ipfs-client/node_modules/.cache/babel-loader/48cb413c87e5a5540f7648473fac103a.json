{"ast":null,"code":"import React from \"react\";\nimport pathToRegexp from 'path-to-regexp';\nimport { urlToList } from './pathTools'; // 渲染Breadcrumb 子节点\n// Render the Breadcrumb child node\n\nvar defaultItemRender = function defaultItemRender(_ref) {\n  var breadcrumbName = _ref.breadcrumbName,\n      path = _ref.path;\n  return /*#__PURE__*/React.createElement(\"a\", {\n    href: path\n  }, breadcrumbName);\n};\n\nvar renderItemLocal = function renderItemLocal(item, props) {\n  var formatMessage = props.formatMessage,\n      menu = props.menu;\n\n  if (item.locale && formatMessage && (menu === null || menu === void 0 ? void 0 : menu.locale) !== false) {\n    return formatMessage({\n      id: item.locale,\n      defaultMessage: item.name\n    });\n  }\n\n  return item.name;\n};\n\nexport var getBreadcrumb = function getBreadcrumb(breadcrumbMap, url) {\n  var breadcrumbItem = breadcrumbMap.get(url);\n\n  if (!breadcrumbItem) {\n    // Find the first matching path in the order defined by route config\n    // 按照 route config 定义的顺序找到第一个匹配的路径\n    var keys = Array.from(breadcrumbMap.keys()) || [];\n    var targetPath = keys.find(function (path) {\n      return (// remove ? ,不然会重复\n        pathToRegexp(path.replace('?', '')).test(url)\n      );\n    });\n    if (targetPath) breadcrumbItem = breadcrumbMap.get(targetPath);\n  }\n\n  return breadcrumbItem || {\n    path: ''\n  };\n};\nexport var getBreadcrumbFromProps = function getBreadcrumbFromProps(props) {\n  var location = props.location,\n      breadcrumbMap = props.breadcrumbMap;\n  return {\n    location: location,\n    breadcrumbMap: breadcrumbMap\n  };\n};\n\nvar conversionFromLocation = function conversionFromLocation(routerLocation, breadcrumbMap, props) {\n  // Convertor the url to an array\n  var pathSnippets = urlToList(routerLocation === null || routerLocation === void 0 ? void 0 : routerLocation.pathname); // Loop data mosaic routing\n\n  var extraBreadcrumbItems = pathSnippets.map(function (url) {\n    var currentBreadcrumb = getBreadcrumb(breadcrumbMap, url);\n    var name = renderItemLocal(currentBreadcrumb, props);\n    var hideInBreadcrumb = currentBreadcrumb.hideInBreadcrumb;\n    return name && !hideInBreadcrumb ? {\n      path: url,\n      breadcrumbName: name,\n      component: currentBreadcrumb.component\n    } : {\n      path: '',\n      breadcrumbName: ''\n    };\n  }).filter(function (item) {\n    return item && item.path;\n  });\n  return extraBreadcrumbItems;\n};\n/** 将参数转化为面包屑 Convert parameters into breadcrumbs */\n\n\nexport var genBreadcrumbProps = function genBreadcrumbProps(props) {\n  var _getBreadcrumbFromPro = getBreadcrumbFromProps(props),\n      location = _getBreadcrumbFromPro.location,\n      breadcrumbMap = _getBreadcrumbFromPro.breadcrumbMap; // 根据 location 生成 面包屑\n  // Generate breadcrumbs based on location\n\n\n  if (location && location.pathname && breadcrumbMap) {\n    return conversionFromLocation(location, breadcrumbMap, props);\n  }\n\n  return [];\n}; // use breadcrumbRender to change routes\n\nexport var getBreadcrumbProps = function getBreadcrumbProps(props, layoutPros) {\n  var breadcrumbRender = props.breadcrumbRender,\n      propsItemRender = props.itemRender;\n\n  var _ref2 = layoutPros.breadcrumbProps || {},\n      _ref2$minLength = _ref2.minLength,\n      minLength = _ref2$minLength === void 0 ? 2 : _ref2$minLength;\n\n  var routesArray = genBreadcrumbProps(props);\n  var itemRender = propsItemRender || defaultItemRender;\n  var routes = routesArray; // if routes.length =1, don't show it\n\n  if (breadcrumbRender) {\n    routes = breadcrumbRender(routes) || [];\n  }\n\n  if (routes && routes.length < minLength || breadcrumbRender === false) {\n    routes = undefined;\n  }\n\n  return {\n    routes: routes,\n    itemRender: itemRender\n  };\n};","map":{"version":3,"sources":["/Users/jameszow/Documents/RustWorkSpace/covid-ipfs/covid-ipfs-client/node_modules/@ant-design/pro-layout/es/utils/getBreadcrumbProps.js"],"names":["React","pathToRegexp","urlToList","defaultItemRender","_ref","breadcrumbName","path","createElement","href","renderItemLocal","item","props","formatMessage","menu","locale","id","defaultMessage","name","getBreadcrumb","breadcrumbMap","url","breadcrumbItem","get","keys","Array","from","targetPath","find","replace","test","getBreadcrumbFromProps","location","conversionFromLocation","routerLocation","pathSnippets","pathname","extraBreadcrumbItems","map","currentBreadcrumb","hideInBreadcrumb","component","filter","genBreadcrumbProps","_getBreadcrumbFromPro","getBreadcrumbProps","layoutPros","breadcrumbRender","propsItemRender","itemRender","_ref2","breadcrumbProps","_ref2$minLength","minLength","routesArray","routes","length","undefined"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport pathToRegexp from 'path-to-regexp';\nimport { urlToList } from './pathTools'; // 渲染Breadcrumb 子节点\n// Render the Breadcrumb child node\n\nvar defaultItemRender = function defaultItemRender(_ref) {\n  var breadcrumbName = _ref.breadcrumbName,\n      path = _ref.path;\n  return /*#__PURE__*/React.createElement(\"a\", {\n    href: path\n  }, breadcrumbName);\n};\n\nvar renderItemLocal = function renderItemLocal(item, props) {\n  var formatMessage = props.formatMessage,\n      menu = props.menu;\n\n  if (item.locale && formatMessage && (menu === null || menu === void 0 ? void 0 : menu.locale) !== false) {\n    return formatMessage({\n      id: item.locale,\n      defaultMessage: item.name\n    });\n  }\n\n  return item.name;\n};\n\nexport var getBreadcrumb = function getBreadcrumb(breadcrumbMap, url) {\n  var breadcrumbItem = breadcrumbMap.get(url);\n\n  if (!breadcrumbItem) {\n    // Find the first matching path in the order defined by route config\n    // 按照 route config 定义的顺序找到第一个匹配的路径\n    var keys = Array.from(breadcrumbMap.keys()) || [];\n    var targetPath = keys.find(function (path) {\n      return (// remove ? ,不然会重复\n        pathToRegexp(path.replace('?', '')).test(url)\n      );\n    });\n    if (targetPath) breadcrumbItem = breadcrumbMap.get(targetPath);\n  }\n\n  return breadcrumbItem || {\n    path: ''\n  };\n};\nexport var getBreadcrumbFromProps = function getBreadcrumbFromProps(props) {\n  var location = props.location,\n      breadcrumbMap = props.breadcrumbMap;\n  return {\n    location: location,\n    breadcrumbMap: breadcrumbMap\n  };\n};\n\nvar conversionFromLocation = function conversionFromLocation(routerLocation, breadcrumbMap, props) {\n  // Convertor the url to an array\n  var pathSnippets = urlToList(routerLocation === null || routerLocation === void 0 ? void 0 : routerLocation.pathname); // Loop data mosaic routing\n\n  var extraBreadcrumbItems = pathSnippets.map(function (url) {\n    var currentBreadcrumb = getBreadcrumb(breadcrumbMap, url);\n    var name = renderItemLocal(currentBreadcrumb, props);\n    var hideInBreadcrumb = currentBreadcrumb.hideInBreadcrumb;\n    return name && !hideInBreadcrumb ? {\n      path: url,\n      breadcrumbName: name,\n      component: currentBreadcrumb.component\n    } : {\n      path: '',\n      breadcrumbName: ''\n    };\n  }).filter(function (item) {\n    return item && item.path;\n  });\n  return extraBreadcrumbItems;\n};\n/** 将参数转化为面包屑 Convert parameters into breadcrumbs */\n\n\nexport var genBreadcrumbProps = function genBreadcrumbProps(props) {\n  var _getBreadcrumbFromPro = getBreadcrumbFromProps(props),\n      location = _getBreadcrumbFromPro.location,\n      breadcrumbMap = _getBreadcrumbFromPro.breadcrumbMap; // 根据 location 生成 面包屑\n  // Generate breadcrumbs based on location\n\n\n  if (location && location.pathname && breadcrumbMap) {\n    return conversionFromLocation(location, breadcrumbMap, props);\n  }\n\n  return [];\n}; // use breadcrumbRender to change routes\n\nexport var getBreadcrumbProps = function getBreadcrumbProps(props, layoutPros) {\n  var breadcrumbRender = props.breadcrumbRender,\n      propsItemRender = props.itemRender;\n\n  var _ref2 = layoutPros.breadcrumbProps || {},\n      _ref2$minLength = _ref2.minLength,\n      minLength = _ref2$minLength === void 0 ? 2 : _ref2$minLength;\n\n  var routesArray = genBreadcrumbProps(props);\n  var itemRender = propsItemRender || defaultItemRender;\n  var routes = routesArray; // if routes.length =1, don't show it\n\n  if (breadcrumbRender) {\n    routes = breadcrumbRender(routes) || [];\n  }\n\n  if (routes && routes.length < minLength || breadcrumbRender === false) {\n    routes = undefined;\n  }\n\n  return {\n    routes: routes,\n    itemRender: itemRender\n  };\n};"]},"metadata":{},"sourceType":"module"}