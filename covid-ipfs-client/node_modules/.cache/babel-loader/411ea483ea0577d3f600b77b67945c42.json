{"ast":null,"code":"import \"antd/es/list/style\";\nimport _List from \"antd/es/list\";\nimport \"antd/es/switch/style\";\nimport _Switch from \"antd/es/switch\";\nimport React from 'react';\nimport { getFormatMessage } from './index';\nimport { renderLayoutSettingItem } from './LayoutChange';\n\nvar RegionalSetting = function RegionalSetting(_ref) {\n  var _ref$settings = _ref.settings,\n      settings = _ref$settings === void 0 ? {} : _ref$settings,\n      changeSetting = _ref.changeSetting;\n  var formatMessage = getFormatMessage();\n  var regionalSetting = ['header', 'footer', 'menu', 'menuHeader'];\n  return /*#__PURE__*/React.createElement(_List, {\n    split: false,\n    renderItem: renderLayoutSettingItem,\n    dataSource: regionalSetting.map(function (key) {\n      return {\n        title: formatMessage({\n          id: \"app.setting.regionalsettings.\".concat(key)\n        }),\n        action: /*#__PURE__*/React.createElement(_Switch, {\n          size: \"small\",\n          className: \"regional-\".concat(key),\n          checked: settings[\"\".concat(key, \"Render\")] || settings[\"\".concat(key, \"Render\")] === undefined,\n          onChange: function onChange(checked) {\n            return changeSetting(\"\".concat(key, \"Render\"), checked === true ? undefined : false);\n          }\n        })\n      };\n    })\n  });\n};\n\nexport default RegionalSetting;","map":{"version":3,"sources":["/Users/jameszow/Documents/RustWorkSpace/covid-ipfs/covid-ipfs-client/node_modules/@ant-design/pro-layout/es/components/SettingDrawer/RegionalChange.js"],"names":["_List","_Switch","React","getFormatMessage","renderLayoutSettingItem","RegionalSetting","_ref","_ref$settings","settings","changeSetting","formatMessage","regionalSetting","createElement","split","renderItem","dataSource","map","key","title","id","concat","action","size","className","checked","undefined","onChange"],"mappings":"AAAA,OAAO,oBAAP;AACA,OAAOA,KAAP,MAAkB,cAAlB;AACA,OAAO,sBAAP;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,SAAjC;AACA,SAASC,uBAAT,QAAwC,gBAAxC;;AAEA,IAAIC,eAAe,GAAG,SAASA,eAAT,CAAyBC,IAAzB,EAA+B;AACnD,MAAIC,aAAa,GAAGD,IAAI,CAACE,QAAzB;AAAA,MACIA,QAAQ,GAAGD,aAAa,KAAK,KAAK,CAAvB,GAA2B,EAA3B,GAAgCA,aAD/C;AAAA,MAEIE,aAAa,GAAGH,IAAI,CAACG,aAFzB;AAGA,MAAIC,aAAa,GAAGP,gBAAgB,EAApC;AACA,MAAIQ,eAAe,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,MAArB,EAA6B,YAA7B,CAAtB;AACA,SAAO,aAAaT,KAAK,CAACU,aAAN,CAAoBZ,KAApB,EAA2B;AAC7Ca,IAAAA,KAAK,EAAE,KADsC;AAE7CC,IAAAA,UAAU,EAAEV,uBAFiC;AAG7CW,IAAAA,UAAU,EAAEJ,eAAe,CAACK,GAAhB,CAAoB,UAAUC,GAAV,EAAe;AAC7C,aAAO;AACLC,QAAAA,KAAK,EAAER,aAAa,CAAC;AACnBS,UAAAA,EAAE,EAAE,gCAAgCC,MAAhC,CAAuCH,GAAvC;AADe,SAAD,CADf;AAILI,QAAAA,MAAM,EAAE,aAAanB,KAAK,CAACU,aAAN,CAAoBX,OAApB,EAA6B;AAChDqB,UAAAA,IAAI,EAAE,OAD0C;AAEhDC,UAAAA,SAAS,EAAE,YAAYH,MAAZ,CAAmBH,GAAnB,CAFqC;AAGhDO,UAAAA,OAAO,EAAEhB,QAAQ,CAAC,GAAGY,MAAH,CAAUH,GAAV,EAAe,QAAf,CAAD,CAAR,IAAsCT,QAAQ,CAAC,GAAGY,MAAH,CAAUH,GAAV,EAAe,QAAf,CAAD,CAAR,KAAuCQ,SAHtC;AAIhDC,UAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBF,OAAlB,EAA2B;AACnC,mBAAOf,aAAa,CAAC,GAAGW,MAAH,CAAUH,GAAV,EAAe,QAAf,CAAD,EAA2BO,OAAO,KAAK,IAAZ,GAAmBC,SAAnB,GAA+B,KAA1D,CAApB;AACD;AAN+C,SAA7B;AAJhB,OAAP;AAaD,KAdW;AAHiC,GAA3B,CAApB;AAmBD,CAzBD;;AA2BA,eAAepB,eAAf","sourcesContent":["import \"antd/es/list/style\";\nimport _List from \"antd/es/list\";\nimport \"antd/es/switch/style\";\nimport _Switch from \"antd/es/switch\";\nimport React from 'react';\nimport { getFormatMessage } from './index';\nimport { renderLayoutSettingItem } from './LayoutChange';\n\nvar RegionalSetting = function RegionalSetting(_ref) {\n  var _ref$settings = _ref.settings,\n      settings = _ref$settings === void 0 ? {} : _ref$settings,\n      changeSetting = _ref.changeSetting;\n  var formatMessage = getFormatMessage();\n  var regionalSetting = ['header', 'footer', 'menu', 'menuHeader'];\n  return /*#__PURE__*/React.createElement(_List, {\n    split: false,\n    renderItem: renderLayoutSettingItem,\n    dataSource: regionalSetting.map(function (key) {\n      return {\n        title: formatMessage({\n          id: \"app.setting.regionalsettings.\".concat(key)\n        }),\n        action: /*#__PURE__*/React.createElement(_Switch, {\n          size: \"small\",\n          className: \"regional-\".concat(key),\n          checked: settings[\"\".concat(key, \"Render\")] || settings[\"\".concat(key, \"Render\")] === undefined,\n          onChange: function onChange(checked) {\n            return changeSetting(\"\".concat(key, \"Render\"), checked === true ? undefined : false);\n          }\n        })\n      };\n    })\n  });\n};\n\nexport default RegionalSetting;"]},"metadata":{},"sourceType":"module"}