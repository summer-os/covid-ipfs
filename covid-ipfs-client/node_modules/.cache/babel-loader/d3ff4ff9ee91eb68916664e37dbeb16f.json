{"ast":null,"code":"import \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/input-number/style\";\nimport _InputNumber from \"antd/es/input-number\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport React from 'react';\n/**\n * 数字范围组件\n *\n * @param FieldDigitRangeProps\n */\n\nvar FieldDigitRange = function FieldDigitRange(_ref, ref) {\n  var text = _ref.text,\n      type = _ref.mode,\n      render = _ref.render,\n      placeholder = _ref.placeholder,\n      renderFormItem = _ref.renderFormItem,\n      fieldProps = _ref.fieldProps,\n      _ref$separator = _ref.separator,\n      separator = _ref$separator === void 0 ? '~' : _ref$separator,\n      _ref$separatorWidth = _ref.separatorWidth,\n      separatorWidth = _ref$separatorWidth === void 0 ? 30 : _ref$separatorWidth;\n  var value = fieldProps.value,\n      defaultValue = fieldProps.defaultValue,\n      onChange = fieldProps.onChange,\n      id = fieldProps.id;\n\n  var _useMergedState = useMergedState(function () {\n    return defaultValue;\n  }, {\n    value: value,\n    onChange: onChange\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      valuePair = _useMergedState2[0],\n      setValuePair = _useMergedState2[1];\n\n  if (type === 'read') {\n    var getContent = function getContent(number) {\n      var _fieldProps$formatter;\n\n      var digit = new Intl.NumberFormat(undefined, _objectSpread({\n        minimumSignificantDigits: 2\n      }, (fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.intlProps) || {})).format(Number(number));\n      return (fieldProps === null || fieldProps === void 0 ? void 0 : (_fieldProps$formatter = fieldProps.formatter) === null || _fieldProps$formatter === void 0 ? void 0 : _fieldProps$formatter.call(fieldProps, digit)) || digit;\n    };\n\n    var dom = /*#__PURE__*/React.createElement(\"span\", {\n      ref: ref\n    }, getContent(text[0]), \" \", separator, \" \", getContent(text[1]));\n\n    if (render) {\n      return render(text, _objectSpread({\n        mode: type\n      }, fieldProps), dom);\n    }\n\n    return dom;\n  }\n\n  if (type === 'edit' || type === 'update') {\n    var handleGroupBlur = function handleGroupBlur() {\n      if (Array.isArray(valuePair)) {\n        //   仅在两个值均为数字时才做比较并转换\n        var _valuePair = _slicedToArray(valuePair, 2),\n            value0 = _valuePair[0],\n            value1 = _valuePair[1];\n\n        if (typeof value0 === 'number' && typeof value1 === 'number' && value0 > value1) {\n          setValuePair([value1, value0]);\n        } else if (value0 === undefined && value1 === undefined) {\n          // 当两个值均为undefined时将值变为undefined，方便required处理\n          setValuePair(undefined);\n        }\n      }\n    };\n\n    var handleChange = function handleChange(index, changedValue) {\n      var newValuePair = _toConsumableArray(valuePair || []);\n\n      newValuePair[index] = changedValue === null ? undefined : changedValue;\n      setValuePair(newValuePair);\n    };\n\n    var placeholderValue = (fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.placeholder) || placeholder;\n\n    var _dom = /*#__PURE__*/React.createElement(_Input.Group, {\n      compact: true,\n      onBlur: handleGroupBlur\n    }, /*#__PURE__*/React.createElement(_InputNumber, _extends({}, fieldProps, {\n      placeholder: Array.isArray(placeholderValue) ? placeholderValue[0] : placeholderValue,\n      id: id !== null && id !== void 0 ? id : \"\".concat(id, \"-0\"),\n      style: {\n        width: \"calc((100% - \".concat(separatorWidth, \"px) / 2)\")\n      },\n      value: valuePair === null || valuePair === void 0 ? void 0 : valuePair[0],\n      defaultValue: defaultValue === null || defaultValue === void 0 ? void 0 : defaultValue[0],\n      onChange: function onChange(changedValue) {\n        return handleChange(0, changedValue);\n      }\n    })), /*#__PURE__*/React.createElement(_Input, {\n      style: {\n        width: separatorWidth,\n        textAlign: 'center',\n        borderLeft: 0,\n        borderRight: 0,\n        pointerEvents: 'none',\n        backgroundColor: '#FFF'\n      },\n      placeholder: separator,\n      disabled: true\n    }), /*#__PURE__*/React.createElement(_InputNumber, _extends({}, fieldProps, {\n      placeholder: Array.isArray(placeholderValue) ? placeholderValue[1] : placeholderValue,\n      id: id !== null && id !== void 0 ? id : \"\".concat(id, \"-1\"),\n      style: {\n        width: \"calc((100% - \".concat(separatorWidth, \"px) / 2)\"),\n        borderLeft: 0\n      },\n      value: valuePair === null || valuePair === void 0 ? void 0 : valuePair[1],\n      defaultValue: defaultValue === null || defaultValue === void 0 ? void 0 : defaultValue[1],\n      onChange: function onChange(changedValue) {\n        return handleChange(1, changedValue);\n      }\n    })));\n\n    if (renderFormItem) {\n      return renderFormItem(text, _objectSpread({\n        mode: type\n      }, fieldProps), _dom);\n    }\n\n    return _dom;\n  }\n\n  return null;\n};\n\nexport default /*#__PURE__*/React.forwardRef(FieldDigitRange);","map":{"version":3,"sources":["/Users/jameszow/Documents/RustWorkSpace/covid-ipfs/covid-ipfs-client/node_modules/@ant-design/pro-field/es/components/DigitRange/index.js"],"names":["_Input","_InputNumber","_extends","_toConsumableArray","_objectSpread","_slicedToArray","useMergedState","React","FieldDigitRange","_ref","ref","text","type","mode","render","placeholder","renderFormItem","fieldProps","_ref$separator","separator","_ref$separatorWidth","separatorWidth","value","defaultValue","onChange","id","_useMergedState","_useMergedState2","valuePair","setValuePair","getContent","number","_fieldProps$formatter","digit","Intl","NumberFormat","undefined","minimumSignificantDigits","intlProps","format","Number","formatter","call","dom","createElement","handleGroupBlur","Array","isArray","_valuePair","value0","value1","handleChange","index","changedValue","newValuePair","placeholderValue","_dom","Group","compact","onBlur","concat","style","width","textAlign","borderLeft","borderRight","pointerEvents","backgroundColor","disabled","forwardRef"],"mappings":"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","sourcesContent":["import \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/input-number/style\";\nimport _InputNumber from \"antd/es/input-number\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport React from 'react';\n/**\n * 数字范围组件\n *\n * @param FieldDigitRangeProps\n */\n\nvar FieldDigitRange = function FieldDigitRange(_ref, ref) {\n  var text = _ref.text,\n      type = _ref.mode,\n      render = _ref.render,\n      placeholder = _ref.placeholder,\n      renderFormItem = _ref.renderFormItem,\n      fieldProps = _ref.fieldProps,\n      _ref$separator = _ref.separator,\n      separator = _ref$separator === void 0 ? '~' : _ref$separator,\n      _ref$separatorWidth = _ref.separatorWidth,\n      separatorWidth = _ref$separatorWidth === void 0 ? 30 : _ref$separatorWidth;\n  var value = fieldProps.value,\n      defaultValue = fieldProps.defaultValue,\n      onChange = fieldProps.onChange,\n      id = fieldProps.id;\n\n  var _useMergedState = useMergedState(function () {\n    return defaultValue;\n  }, {\n    value: value,\n    onChange: onChange\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      valuePair = _useMergedState2[0],\n      setValuePair = _useMergedState2[1];\n\n  if (type === 'read') {\n    var getContent = function getContent(number) {\n      var _fieldProps$formatter;\n\n      var digit = new Intl.NumberFormat(undefined, _objectSpread({\n        minimumSignificantDigits: 2\n      }, (fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.intlProps) || {})).format(Number(number));\n      return (fieldProps === null || fieldProps === void 0 ? void 0 : (_fieldProps$formatter = fieldProps.formatter) === null || _fieldProps$formatter === void 0 ? void 0 : _fieldProps$formatter.call(fieldProps, digit)) || digit;\n    };\n\n    var dom = /*#__PURE__*/React.createElement(\"span\", {\n      ref: ref\n    }, getContent(text[0]), \" \", separator, \" \", getContent(text[1]));\n\n    if (render) {\n      return render(text, _objectSpread({\n        mode: type\n      }, fieldProps), dom);\n    }\n\n    return dom;\n  }\n\n  if (type === 'edit' || type === 'update') {\n    var handleGroupBlur = function handleGroupBlur() {\n      if (Array.isArray(valuePair)) {\n        //   仅在两个值均为数字时才做比较并转换\n        var _valuePair = _slicedToArray(valuePair, 2),\n            value0 = _valuePair[0],\n            value1 = _valuePair[1];\n\n        if (typeof value0 === 'number' && typeof value1 === 'number' && value0 > value1) {\n          setValuePair([value1, value0]);\n        } else if (value0 === undefined && value1 === undefined) {\n          // 当两个值均为undefined时将值变为undefined，方便required处理\n          setValuePair(undefined);\n        }\n      }\n    };\n\n    var handleChange = function handleChange(index, changedValue) {\n      var newValuePair = _toConsumableArray(valuePair || []);\n\n      newValuePair[index] = changedValue === null ? undefined : changedValue;\n      setValuePair(newValuePair);\n    };\n\n    var placeholderValue = (fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.placeholder) || placeholder;\n\n    var _dom = /*#__PURE__*/React.createElement(_Input.Group, {\n      compact: true,\n      onBlur: handleGroupBlur\n    }, /*#__PURE__*/React.createElement(_InputNumber, _extends({}, fieldProps, {\n      placeholder: Array.isArray(placeholderValue) ? placeholderValue[0] : placeholderValue,\n      id: id !== null && id !== void 0 ? id : \"\".concat(id, \"-0\"),\n      style: {\n        width: \"calc((100% - \".concat(separatorWidth, \"px) / 2)\")\n      },\n      value: valuePair === null || valuePair === void 0 ? void 0 : valuePair[0],\n      defaultValue: defaultValue === null || defaultValue === void 0 ? void 0 : defaultValue[0],\n      onChange: function onChange(changedValue) {\n        return handleChange(0, changedValue);\n      }\n    })), /*#__PURE__*/React.createElement(_Input, {\n      style: {\n        width: separatorWidth,\n        textAlign: 'center',\n        borderLeft: 0,\n        borderRight: 0,\n        pointerEvents: 'none',\n        backgroundColor: '#FFF'\n      },\n      placeholder: separator,\n      disabled: true\n    }), /*#__PURE__*/React.createElement(_InputNumber, _extends({}, fieldProps, {\n      placeholder: Array.isArray(placeholderValue) ? placeholderValue[1] : placeholderValue,\n      id: id !== null && id !== void 0 ? id : \"\".concat(id, \"-1\"),\n      style: {\n        width: \"calc((100% - \".concat(separatorWidth, \"px) / 2)\"),\n        borderLeft: 0\n      },\n      value: valuePair === null || valuePair === void 0 ? void 0 : valuePair[1],\n      defaultValue: defaultValue === null || defaultValue === void 0 ? void 0 : defaultValue[1],\n      onChange: function onChange(changedValue) {\n        return handleChange(1, changedValue);\n      }\n    })));\n\n    if (renderFormItem) {\n      return renderFormItem(text, _objectSpread({\n        mode: type\n      }, fieldProps), _dom);\n    }\n\n    return _dom;\n  }\n\n  return null;\n};\n\nexport default /*#__PURE__*/React.forwardRef(FieldDigitRange);"]},"metadata":{},"sourceType":"module"}