{"ast":null,"code":"import \"antd/es/cascader/style\";\nimport _Cascader from \"antd/es/cascader\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/es/config-provider/style\";\nimport _ConfigProvider from \"antd/es/config-provider\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"radioType\", \"renderFormItem\", \"mode\", \"render\", \"label\", \"light\"];\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { useIntl } from '@ant-design/pro-provider';\nimport { FieldLabel } from '@ant-design/pro-utils';\nimport classNames from 'classnames';\nimport React, { useContext, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { ObjToMap, proFieldParsingText, useFieldFetchData } from '../Select';\n/**\n * 级联选择组件\n *\n * @param param0\n * @param ref\n */\n\nvar FieldCascader = function FieldCascader(_ref, ref) {\n  var _rest$fieldProps2;\n\n  var radioType = _ref.radioType,\n      renderFormItem = _ref.renderFormItem,\n      mode = _ref.mode,\n      render = _ref.render,\n      label = _ref.label,\n      light = _ref.light,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useContext = useContext(_ConfigProvider.ConfigContext),\n      getPrefixCls = _useContext.getPrefixCls;\n\n  var layoutClassName = getPrefixCls('pro-field-cascader');\n\n  var _useFieldFetchData = useFieldFetchData(rest),\n      _useFieldFetchData2 = _slicedToArray(_useFieldFetchData, 3),\n      loading = _useFieldFetchData2[0],\n      options = _useFieldFetchData2[1],\n      _fetchData = _useFieldFetchData2[2];\n\n  var intl = useIntl();\n  var cascaderRef = useRef();\n  var size = useContext(_ConfigProvider.SizeContext);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  useImperativeHandle(ref, function () {\n    return _objectSpread(_objectSpread({}, cascaderRef.current || {}), {}, {\n      fetchData: function fetchData() {\n        return _fetchData();\n      }\n    });\n  });\n  var optionsValueEnum = useMemo(function () {\n    var _rest$fieldProps;\n\n    if (mode !== 'read') return;\n    /**\n     * Support cascader fieldNames\n     *\n     * @see https://ant.design/components/cascader-cn/#header\n     */\n\n    var _ref2 = ((_rest$fieldProps = rest.fieldProps) === null || _rest$fieldProps === void 0 ? void 0 : _rest$fieldProps.fieldNames) || {},\n        _ref2$value = _ref2.value,\n        valuePropsName = _ref2$value === void 0 ? 'value' : _ref2$value,\n        _ref2$label = _ref2.label,\n        labelPropsName = _ref2$label === void 0 ? 'label' : _ref2$label,\n        _ref2$children = _ref2.children,\n        childrenPropsName = _ref2$children === void 0 ? 'children' : _ref2$children;\n\n    var valuesMap = new Map();\n\n    var traverseOptions = function traverseOptions(_options) {\n      if (!(_options === null || _options === void 0 ? void 0 : _options.length)) {\n        return valuesMap;\n      }\n\n      var length = _options.length;\n      var i = 0;\n\n      while (i < length) {\n        var cur = _options[i++];\n        valuesMap.set(cur[valuePropsName], cur[labelPropsName]);\n        traverseOptions(cur[childrenPropsName]);\n      }\n\n      return valuesMap;\n    };\n\n    return traverseOptions(options);\n  }, [mode, options, (_rest$fieldProps2 = rest.fieldProps) === null || _rest$fieldProps2 === void 0 ? void 0 : _rest$fieldProps2.fieldNames]);\n\n  if (mode === 'read') {\n    var dom = /*#__PURE__*/React.createElement(React.Fragment, null, proFieldParsingText(rest.text, ObjToMap(rest.valueEnum || optionsValueEnum)));\n\n    if (render) {\n      return render(rest.text, _objectSpread({\n        mode: mode\n      }, rest.fieldProps), dom) || null;\n    }\n\n    return dom;\n  }\n\n  if (mode === 'edit') {\n    var _rest$fieldProps3;\n\n    var _dom = /*#__PURE__*/React.createElement(_Cascader, _extends({\n      bordered: !light,\n      ref: cascaderRef,\n      open: open,\n      onDropdownVisibleChange: setOpen,\n      suffixIcon: loading ? /*#__PURE__*/React.createElement(LoadingOutlined, null) : light ? null : undefined,\n      placeholder: intl.getMessage('tableForm.selectPlaceholder', '请选择'),\n      allowClear: light ? false : undefined\n    }, rest.fieldProps, {\n      className: classNames((_rest$fieldProps3 = rest.fieldProps) === null || _rest$fieldProps3 === void 0 ? void 0 : _rest$fieldProps3.className, layoutClassName),\n      options: options\n    }));\n\n    if (renderFormItem) {\n      _dom = renderFormItem(rest.text, _objectSpread({\n        mode: mode\n      }, rest.fieldProps), _dom) || null;\n    }\n\n    if (light) {\n      var _rest$fieldProps4 = rest.fieldProps,\n          disabled = _rest$fieldProps4.disabled,\n          allowClear = _rest$fieldProps4.allowClear,\n          placeholder = _rest$fieldProps4.placeholder;\n      return /*#__PURE__*/React.createElement(FieldLabel, {\n        label: label,\n        disabled: disabled,\n        placeholder: placeholder,\n        size: size,\n        allowClear: allowClear,\n        bordered: rest.bordered,\n        value: _dom,\n        onLabelClick: function onLabelClick() {\n          return setOpen(!open);\n        },\n        onClear: function onClear() {\n          var _rest$fieldProps5, _rest$fieldProps5$onC;\n\n          return (_rest$fieldProps5 = rest.fieldProps) === null || _rest$fieldProps5 === void 0 ? void 0 : (_rest$fieldProps5$onC = _rest$fieldProps5.onChange) === null || _rest$fieldProps5$onC === void 0 ? void 0 : _rest$fieldProps5$onC.call(_rest$fieldProps5, undefined, [], {});\n        }\n      });\n    }\n\n    return _dom;\n  }\n\n  return null;\n};\n\nexport default /*#__PURE__*/React.forwardRef(FieldCascader);","map":{"version":3,"sources":["/Users/jameszow/Documents/RustWorkSpace/covid-ipfs/covid-ipfs-client/node_modules/@ant-design/pro-field/es/components/Cascader/index.js"],"names":["_Cascader","_extends","_objectSpread","_slicedToArray","_ConfigProvider","_objectWithoutProperties","_excluded","LoadingOutlined","useIntl","FieldLabel","classNames","React","useContext","useImperativeHandle","useMemo","useRef","useState","ObjToMap","proFieldParsingText","useFieldFetchData","FieldCascader","_ref","ref","_rest$fieldProps2","radioType","renderFormItem","mode","render","label","light","rest","_useContext","ConfigContext","getPrefixCls","layoutClassName","_useFieldFetchData","_useFieldFetchData2","loading","options","_fetchData","intl","cascaderRef","size","SizeContext","_useState","_useState2","open","setOpen","current","fetchData","optionsValueEnum","_rest$fieldProps","_ref2","fieldProps","fieldNames","_ref2$value","value","valuePropsName","_ref2$label","labelPropsName","_ref2$children","children","childrenPropsName","valuesMap","Map","traverseOptions","_options","length","i","cur","set","dom","createElement","Fragment","text","valueEnum","_rest$fieldProps3","_dom","bordered","onDropdownVisibleChange","suffixIcon","undefined","placeholder","getMessage","allowClear","className","_rest$fieldProps4","disabled","onLabelClick","onClear","_rest$fieldProps5","_rest$fieldProps5$onC","onChange","call","forwardRef"],"mappings":"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","sourcesContent":["import \"antd/es/cascader/style\";\nimport _Cascader from \"antd/es/cascader\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/es/config-provider/style\";\nimport _ConfigProvider from \"antd/es/config-provider\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"radioType\", \"renderFormItem\", \"mode\", \"render\", \"label\", \"light\"];\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { useIntl } from '@ant-design/pro-provider';\nimport { FieldLabel } from '@ant-design/pro-utils';\nimport classNames from 'classnames';\nimport React, { useContext, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { ObjToMap, proFieldParsingText, useFieldFetchData } from '../Select';\n/**\n * 级联选择组件\n *\n * @param param0\n * @param ref\n */\n\nvar FieldCascader = function FieldCascader(_ref, ref) {\n  var _rest$fieldProps2;\n\n  var radioType = _ref.radioType,\n      renderFormItem = _ref.renderFormItem,\n      mode = _ref.mode,\n      render = _ref.render,\n      label = _ref.label,\n      light = _ref.light,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useContext = useContext(_ConfigProvider.ConfigContext),\n      getPrefixCls = _useContext.getPrefixCls;\n\n  var layoutClassName = getPrefixCls('pro-field-cascader');\n\n  var _useFieldFetchData = useFieldFetchData(rest),\n      _useFieldFetchData2 = _slicedToArray(_useFieldFetchData, 3),\n      loading = _useFieldFetchData2[0],\n      options = _useFieldFetchData2[1],\n      _fetchData = _useFieldFetchData2[2];\n\n  var intl = useIntl();\n  var cascaderRef = useRef();\n  var size = useContext(_ConfigProvider.SizeContext);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  useImperativeHandle(ref, function () {\n    return _objectSpread(_objectSpread({}, cascaderRef.current || {}), {}, {\n      fetchData: function fetchData() {\n        return _fetchData();\n      }\n    });\n  });\n  var optionsValueEnum = useMemo(function () {\n    var _rest$fieldProps;\n\n    if (mode !== 'read') return;\n    /**\n     * Support cascader fieldNames\n     *\n     * @see https://ant.design/components/cascader-cn/#header\n     */\n\n    var _ref2 = ((_rest$fieldProps = rest.fieldProps) === null || _rest$fieldProps === void 0 ? void 0 : _rest$fieldProps.fieldNames) || {},\n        _ref2$value = _ref2.value,\n        valuePropsName = _ref2$value === void 0 ? 'value' : _ref2$value,\n        _ref2$label = _ref2.label,\n        labelPropsName = _ref2$label === void 0 ? 'label' : _ref2$label,\n        _ref2$children = _ref2.children,\n        childrenPropsName = _ref2$children === void 0 ? 'children' : _ref2$children;\n\n    var valuesMap = new Map();\n\n    var traverseOptions = function traverseOptions(_options) {\n      if (!(_options === null || _options === void 0 ? void 0 : _options.length)) {\n        return valuesMap;\n      }\n\n      var length = _options.length;\n      var i = 0;\n\n      while (i < length) {\n        var cur = _options[i++];\n        valuesMap.set(cur[valuePropsName], cur[labelPropsName]);\n        traverseOptions(cur[childrenPropsName]);\n      }\n\n      return valuesMap;\n    };\n\n    return traverseOptions(options);\n  }, [mode, options, (_rest$fieldProps2 = rest.fieldProps) === null || _rest$fieldProps2 === void 0 ? void 0 : _rest$fieldProps2.fieldNames]);\n\n  if (mode === 'read') {\n    var dom = /*#__PURE__*/React.createElement(React.Fragment, null, proFieldParsingText(rest.text, ObjToMap(rest.valueEnum || optionsValueEnum)));\n\n    if (render) {\n      return render(rest.text, _objectSpread({\n        mode: mode\n      }, rest.fieldProps), dom) || null;\n    }\n\n    return dom;\n  }\n\n  if (mode === 'edit') {\n    var _rest$fieldProps3;\n\n    var _dom = /*#__PURE__*/React.createElement(_Cascader, _extends({\n      bordered: !light,\n      ref: cascaderRef,\n      open: open,\n      onDropdownVisibleChange: setOpen,\n      suffixIcon: loading ? /*#__PURE__*/React.createElement(LoadingOutlined, null) : light ? null : undefined,\n      placeholder: intl.getMessage('tableForm.selectPlaceholder', '请选择'),\n      allowClear: light ? false : undefined\n    }, rest.fieldProps, {\n      className: classNames((_rest$fieldProps3 = rest.fieldProps) === null || _rest$fieldProps3 === void 0 ? void 0 : _rest$fieldProps3.className, layoutClassName),\n      options: options\n    }));\n\n    if (renderFormItem) {\n      _dom = renderFormItem(rest.text, _objectSpread({\n        mode: mode\n      }, rest.fieldProps), _dom) || null;\n    }\n\n    if (light) {\n      var _rest$fieldProps4 = rest.fieldProps,\n          disabled = _rest$fieldProps4.disabled,\n          allowClear = _rest$fieldProps4.allowClear,\n          placeholder = _rest$fieldProps4.placeholder;\n      return /*#__PURE__*/React.createElement(FieldLabel, {\n        label: label,\n        disabled: disabled,\n        placeholder: placeholder,\n        size: size,\n        allowClear: allowClear,\n        bordered: rest.bordered,\n        value: _dom,\n        onLabelClick: function onLabelClick() {\n          return setOpen(!open);\n        },\n        onClear: function onClear() {\n          var _rest$fieldProps5, _rest$fieldProps5$onC;\n\n          return (_rest$fieldProps5 = rest.fieldProps) === null || _rest$fieldProps5 === void 0 ? void 0 : (_rest$fieldProps5$onC = _rest$fieldProps5.onChange) === null || _rest$fieldProps5$onC === void 0 ? void 0 : _rest$fieldProps5$onC.call(_rest$fieldProps5, undefined, [], {});\n        }\n      });\n    }\n\n    return _dom;\n  }\n\n  return null;\n};\n\nexport default /*#__PURE__*/React.forwardRef(FieldCascader);"]},"metadata":{},"sourceType":"module"}