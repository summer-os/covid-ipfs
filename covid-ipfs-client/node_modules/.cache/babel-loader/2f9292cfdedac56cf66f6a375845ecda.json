{"ast":null,"code":"import \"antd/es/tooltip/style\";\nimport _Tooltip from \"antd/es/tooltip\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { FullscreenExitOutlined, FullscreenOutlined } from '@ant-design/icons';\nimport { useIntl } from '@ant-design/pro-provider';\nimport { isBrowser } from '@ant-design/pro-utils';\nimport React, { useEffect, useState } from 'react';\n\nvar FullScreenIcon = function FullScreenIcon() {\n  var intl = useIntl();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fullscreen = _useState2[0],\n      setFullscreen = _useState2[1];\n\n  useEffect(function () {\n    if (!isBrowser()) {\n      return;\n    }\n\n    document.onfullscreenchange = function () {\n      setFullscreen(!!document.fullscreenElement);\n    };\n  }, []);\n  return fullscreen ? /*#__PURE__*/React.createElement(_Tooltip, {\n    title: intl.getMessage('tableToolBar.exitFullScreen', '全屏')\n  }, /*#__PURE__*/React.createElement(FullscreenExitOutlined, null)) : /*#__PURE__*/React.createElement(_Tooltip, {\n    title: intl.getMessage('tableToolBar.fullScreen', '全屏')\n  }, /*#__PURE__*/React.createElement(FullscreenOutlined, null));\n};\n\nexport default /*#__PURE__*/React.memo(FullScreenIcon);","map":{"version":3,"sources":["/Users/jameszow/Documents/RustWorkSpace/covid-ipfs/covid-ipfs-client/node_modules/@ant-design/pro-table/es/components/ToolBar/FullscreenIcon.js"],"names":["_Tooltip","_slicedToArray","FullscreenExitOutlined","FullscreenOutlined","useIntl","isBrowser","React","useEffect","useState","FullScreenIcon","intl","_useState","_useState2","fullscreen","setFullscreen","document","onfullscreenchange","fullscreenElement","createElement","title","getMessage","memo"],"mappings":"AAAA,OAAO,uBAAP;AACA,OAAOA,QAAP,MAAqB,iBAArB;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,SAASC,sBAAT,EAAiCC,kBAAjC,QAA2D,mBAA3D;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,IAAIC,cAAc,GAAG,SAASA,cAAT,GAA0B;AAC7C,MAAIC,IAAI,GAAGN,OAAO,EAAlB;;AAEA,MAAIO,SAAS,GAAGH,QAAQ,CAAC,KAAD,CAAxB;AAAA,MACII,UAAU,GAAGX,cAAc,CAACU,SAAD,EAAY,CAAZ,CAD/B;AAAA,MAEIE,UAAU,GAAGD,UAAU,CAAC,CAAD,CAF3B;AAAA,MAGIE,aAAa,GAAGF,UAAU,CAAC,CAAD,CAH9B;;AAKAL,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAI,CAACF,SAAS,EAAd,EAAkB;AAChB;AACD;;AAEDU,IAAAA,QAAQ,CAACC,kBAAT,GAA8B,YAAY;AACxCF,MAAAA,aAAa,CAAC,CAAC,CAACC,QAAQ,CAACE,iBAAZ,CAAb;AACD,KAFD;AAGD,GARQ,EAQN,EARM,CAAT;AASA,SAAOJ,UAAU,GAAG,aAAaP,KAAK,CAACY,aAAN,CAAoBlB,QAApB,EAA8B;AAC7DmB,IAAAA,KAAK,EAAET,IAAI,CAACU,UAAL,CAAgB,6BAAhB,EAA+C,IAA/C;AADsD,GAA9B,EAE9B,aAAad,KAAK,CAACY,aAAN,CAAoBhB,sBAApB,EAA4C,IAA5C,CAFiB,CAAhB,GAEoD,aAAaI,KAAK,CAACY,aAAN,CAAoBlB,QAApB,EAA8B;AAC9GmB,IAAAA,KAAK,EAAET,IAAI,CAACU,UAAL,CAAgB,yBAAhB,EAA2C,IAA3C;AADuG,GAA9B,EAE/E,aAAad,KAAK,CAACY,aAAN,CAAoBf,kBAApB,EAAwC,IAAxC,CAFkE,CAFlF;AAKD,CAtBD;;AAwBA,eAAe,aAAaG,KAAK,CAACe,IAAN,CAAWZ,cAAX,CAA5B","sourcesContent":["import \"antd/es/tooltip/style\";\nimport _Tooltip from \"antd/es/tooltip\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { FullscreenExitOutlined, FullscreenOutlined } from '@ant-design/icons';\nimport { useIntl } from '@ant-design/pro-provider';\nimport { isBrowser } from '@ant-design/pro-utils';\nimport React, { useEffect, useState } from 'react';\n\nvar FullScreenIcon = function FullScreenIcon() {\n  var intl = useIntl();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fullscreen = _useState2[0],\n      setFullscreen = _useState2[1];\n\n  useEffect(function () {\n    if (!isBrowser()) {\n      return;\n    }\n\n    document.onfullscreenchange = function () {\n      setFullscreen(!!document.fullscreenElement);\n    };\n  }, []);\n  return fullscreen ? /*#__PURE__*/React.createElement(_Tooltip, {\n    title: intl.getMessage('tableToolBar.exitFullScreen', '全屏')\n  }, /*#__PURE__*/React.createElement(FullscreenExitOutlined, null)) : /*#__PURE__*/React.createElement(_Tooltip, {\n    title: intl.getMessage('tableToolBar.fullScreen', '全屏')\n  }, /*#__PURE__*/React.createElement(FullscreenOutlined, null));\n};\n\nexport default /*#__PURE__*/React.memo(FullScreenIcon);"]},"metadata":{},"sourceType":"module"}