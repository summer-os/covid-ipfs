{"ast":null,"code":"import \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/tree-select/style\";\nimport _TreeSelect from \"antd/es/tree-select\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/es/config-provider/style\";\nimport _ConfigProvider from \"antd/es/config-provider\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"radioType\", \"renderFormItem\", \"mode\", \"light\", \"label\", \"render\"],\n    _excluded2 = [\"onSearch\", \"onClear\", \"onChange\", \"onBlur\", \"showSearch\", \"autoClearSearchValue\", \"treeData\", \"searchValue\"];\nimport { FieldLabel } from '@ant-design/pro-utils';\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport React, { useContext, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { ObjToMap, proFieldParsingText, useFieldFetchData } from '../Select';\n/**\n * Tree select\n * A function that returns a React component.\n * @param ref\n */\n\nvar FieldTreeSelect = function FieldTreeSelect(_ref, ref) {\n  var radioType = _ref.radioType,\n      renderFormItem = _ref.renderFormItem,\n      mode = _ref.mode,\n      light = _ref.light,\n      label = _ref.label,\n      render = _ref.render,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useContext = useContext(_ConfigProvider.ConfigContext),\n      getPrefixCls = _useContext.getPrefixCls;\n\n  var layoutClassName = getPrefixCls('pro-field-tree-select');\n  var treeSelectRef = useRef(null);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _ref2 = rest.fieldProps || {},\n      onSearch = _ref2.onSearch,\n      _onClear = _ref2.onClear,\n      propsOnChange = _ref2.onChange,\n      _onBlur = _ref2.onBlur,\n      showSearch = _ref2.showSearch,\n      autoClearSearchValue = _ref2.autoClearSearchValue,\n      treeData = _ref2.treeData,\n      propsSearchValue = _ref2.searchValue,\n      fieldProps = _objectWithoutProperties(_ref2, _excluded2);\n\n  var size = useContext(_ConfigProvider.SizeContext);\n\n  var _useFieldFetchData = useFieldFetchData(_objectSpread(_objectSpread({}, rest), {}, {\n    defaultKeyWords: propsSearchValue\n  })),\n      _useFieldFetchData2 = _slicedToArray(_useFieldFetchData, 3),\n      loading = _useFieldFetchData2[0],\n      options = _useFieldFetchData2[1],\n      _fetchData = _useFieldFetchData2[2];\n\n  var _useMergedState = useMergedState('', {\n    onChange: onSearch,\n    value: propsSearchValue\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      searchValue = _useMergedState2[0],\n      setSearchValue = _useMergedState2[1];\n\n  useImperativeHandle(ref, function () {\n    return _objectSpread(_objectSpread({}, treeSelectRef.current || {}), {}, {\n      fetchData: function fetchData() {\n        return _fetchData();\n      }\n    });\n  });\n  var optionsValueEnum = useMemo(function () {\n    if (mode !== 'read') return;\n    /**\n     * Support TreeSelect fieldNames\n     * @see https://ant.design/components/tree-select-cn\n     */\n\n    var _ref3 = (fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.fieldNames) || {},\n        _ref3$value = _ref3.value,\n        valuePropsName = _ref3$value === void 0 ? 'value' : _ref3$value,\n        _ref3$label = _ref3.label,\n        labelPropsName = _ref3$label === void 0 ? 'label' : _ref3$label,\n        _ref3$children = _ref3.children,\n        childrenPropsName = _ref3$children === void 0 ? 'children' : _ref3$children;\n\n    var valuesMap = new Map();\n\n    var traverseOptions = function traverseOptions(_options) {\n      if (!(_options === null || _options === void 0 ? void 0 : _options.length)) {\n        return valuesMap;\n      }\n\n      var length = _options.length;\n      var i = 0;\n\n      while (i < length) {\n        var cur = _options[i++];\n        valuesMap.set(cur[valuePropsName], cur[labelPropsName]);\n        traverseOptions(cur[childrenPropsName]);\n      }\n\n      return valuesMap;\n    };\n\n    return traverseOptions(options);\n  }, [fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.fieldNames, mode, options]);\n\n  var onChange = function onChange(value, optionList, extra) {\n    // 将搜索框置空 和 antd 行为保持一致\n    if (showSearch && autoClearSearchValue) {\n      _fetchData('');\n\n      setSearchValue('');\n    }\n\n    propsOnChange === null || propsOnChange === void 0 ? void 0 : propsOnChange(value, optionList, extra);\n  };\n\n  if (mode === 'read') {\n    var dom = /*#__PURE__*/React.createElement(React.Fragment, null, proFieldParsingText(rest.text, ObjToMap(rest.valueEnum || optionsValueEnum)));\n\n    if (render) {\n      return render(rest.text, _objectSpread({\n        mode: mode\n      }, fieldProps), dom) || null;\n    }\n\n    return dom;\n  }\n\n  if (mode === 'edit') {\n    var _fieldProps$value;\n\n    var valuesLength = Array.isArray(fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.value) ? fieldProps === null || fieldProps === void 0 ? void 0 : (_fieldProps$value = fieldProps.value) === null || _fieldProps$value === void 0 ? void 0 : _fieldProps$value.length : 0;\n\n    var _dom = /*#__PURE__*/React.createElement(_Spin, {\n      spinning: loading\n    }, /*#__PURE__*/React.createElement(_TreeSelect, _extends({\n      open: open,\n      onDropdownVisibleChange: setOpen,\n      ref: treeSelectRef,\n      dropdownMatchSelectWidth: !light,\n      tagRender: light ? function (item) {\n        var _fieldProps$value2;\n\n        if (valuesLength < 2) return /*#__PURE__*/React.createElement(React.Fragment, null, item.label);\n        /**\n         * 性能不好，等我给 antd 提个issue\n         */\n\n        var itemIndex = fieldProps === null || fieldProps === void 0 ? void 0 : (_fieldProps$value2 = fieldProps.value) === null || _fieldProps$value2 === void 0 ? void 0 : _fieldProps$value2.findIndex(function (v) {\n          return v === item.value || v.value === item.value;\n        });\n        return /*#__PURE__*/React.createElement(React.Fragment, null, item.label, \" \", itemIndex < valuesLength - 1 ? ',' : '');\n      } : undefined\n    }, fieldProps, {\n      bordered: !light,\n      treeData: options || treeData,\n      showSearch: showSearch,\n      style: _objectSpread({\n        minWidth: 60\n      }, fieldProps.style),\n      searchValue: searchValue,\n      autoClearSearchValue: autoClearSearchValue,\n      onClear: function onClear() {\n        _onClear === null || _onClear === void 0 ? void 0 : _onClear();\n\n        _fetchData('');\n\n        if (showSearch) {\n          setSearchValue('');\n        }\n      },\n      onChange: onChange,\n      onSearch: function onSearch(value) {\n        _fetchData(value);\n\n        setSearchValue(value);\n      },\n      onBlur: function onBlur(event) {\n        setSearchValue('');\n\n        _fetchData('');\n\n        _onBlur === null || _onBlur === void 0 ? void 0 : _onBlur(event);\n      },\n      className: classNames(fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.className, layoutClassName)\n    })));\n\n    if (renderFormItem) {\n      _dom = renderFormItem(rest.text, _objectSpread({\n        mode: mode\n      }, fieldProps), _dom) || null;\n    }\n\n    if (light) {\n      var disabled = fieldProps.disabled,\n          allowClear = fieldProps.allowClear,\n          placeholder = fieldProps.placeholder;\n      return /*#__PURE__*/React.createElement(FieldLabel, {\n        label: label,\n        disabled: disabled,\n        placeholder: placeholder,\n        size: size,\n        onLabelClick: function onLabelClick() {\n          return setOpen(!open);\n        },\n        allowClear: allowClear,\n        bordered: rest.bordered,\n        value: _dom,\n        onClear: function onClear() {\n          return propsOnChange === null || propsOnChange === void 0 ? void 0 : propsOnChange(undefined, [], {});\n        }\n      });\n    }\n\n    return _dom;\n  }\n\n  return null;\n};\n\nexport default /*#__PURE__*/React.forwardRef(FieldTreeSelect);","map":{"version":3,"sources":["/Users/jameszow/Documents/RustWorkSpace/covid-ipfs/covid-ipfs-client/node_modules/@ant-design/pro-field/es/components/TreeSelect/index.js"],"names":["_Spin","_TreeSelect","_extends","_objectSpread","_slicedToArray","_ConfigProvider","_objectWithoutProperties","_excluded","_excluded2","FieldLabel","classNames","useMergedState","React","useContext","useImperativeHandle","useMemo","useRef","useState","ObjToMap","proFieldParsingText","useFieldFetchData","FieldTreeSelect","_ref","ref","radioType","renderFormItem","mode","light","label","render","rest","_useContext","ConfigContext","getPrefixCls","layoutClassName","treeSelectRef","_useState","_useState2","open","setOpen","_ref2","fieldProps","onSearch","_onClear","onClear","propsOnChange","onChange","_onBlur","onBlur","showSearch","autoClearSearchValue","treeData","propsSearchValue","searchValue","size","SizeContext","_useFieldFetchData","defaultKeyWords","_useFieldFetchData2","loading","options","_fetchData","_useMergedState","value","_useMergedState2","setSearchValue","current","fetchData","optionsValueEnum","_ref3","fieldNames","_ref3$value","valuePropsName","_ref3$label","labelPropsName","_ref3$children","children","childrenPropsName","valuesMap","Map","traverseOptions","_options","length","i","cur","set","optionList","extra","dom","createElement","Fragment","text","valueEnum","_fieldProps$value","valuesLength","Array","isArray","_dom","spinning","onDropdownVisibleChange","dropdownMatchSelectWidth","tagRender","item","_fieldProps$value2","itemIndex","findIndex","v","undefined","bordered","style","minWidth","event","className","disabled","allowClear","placeholder","onLabelClick","forwardRef"],"mappings":"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","sourcesContent":["import \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/tree-select/style\";\nimport _TreeSelect from \"antd/es/tree-select\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/es/config-provider/style\";\nimport _ConfigProvider from \"antd/es/config-provider\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"radioType\", \"renderFormItem\", \"mode\", \"light\", \"label\", \"render\"],\n    _excluded2 = [\"onSearch\", \"onClear\", \"onChange\", \"onBlur\", \"showSearch\", \"autoClearSearchValue\", \"treeData\", \"searchValue\"];\nimport { FieldLabel } from '@ant-design/pro-utils';\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport React, { useContext, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { ObjToMap, proFieldParsingText, useFieldFetchData } from '../Select';\n/**\n * Tree select\n * A function that returns a React component.\n * @param ref\n */\n\nvar FieldTreeSelect = function FieldTreeSelect(_ref, ref) {\n  var radioType = _ref.radioType,\n      renderFormItem = _ref.renderFormItem,\n      mode = _ref.mode,\n      light = _ref.light,\n      label = _ref.label,\n      render = _ref.render,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useContext = useContext(_ConfigProvider.ConfigContext),\n      getPrefixCls = _useContext.getPrefixCls;\n\n  var layoutClassName = getPrefixCls('pro-field-tree-select');\n  var treeSelectRef = useRef(null);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _ref2 = rest.fieldProps || {},\n      onSearch = _ref2.onSearch,\n      _onClear = _ref2.onClear,\n      propsOnChange = _ref2.onChange,\n      _onBlur = _ref2.onBlur,\n      showSearch = _ref2.showSearch,\n      autoClearSearchValue = _ref2.autoClearSearchValue,\n      treeData = _ref2.treeData,\n      propsSearchValue = _ref2.searchValue,\n      fieldProps = _objectWithoutProperties(_ref2, _excluded2);\n\n  var size = useContext(_ConfigProvider.SizeContext);\n\n  var _useFieldFetchData = useFieldFetchData(_objectSpread(_objectSpread({}, rest), {}, {\n    defaultKeyWords: propsSearchValue\n  })),\n      _useFieldFetchData2 = _slicedToArray(_useFieldFetchData, 3),\n      loading = _useFieldFetchData2[0],\n      options = _useFieldFetchData2[1],\n      _fetchData = _useFieldFetchData2[2];\n\n  var _useMergedState = useMergedState('', {\n    onChange: onSearch,\n    value: propsSearchValue\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      searchValue = _useMergedState2[0],\n      setSearchValue = _useMergedState2[1];\n\n  useImperativeHandle(ref, function () {\n    return _objectSpread(_objectSpread({}, treeSelectRef.current || {}), {}, {\n      fetchData: function fetchData() {\n        return _fetchData();\n      }\n    });\n  });\n  var optionsValueEnum = useMemo(function () {\n    if (mode !== 'read') return;\n    /**\n     * Support TreeSelect fieldNames\n     * @see https://ant.design/components/tree-select-cn\n     */\n\n    var _ref3 = (fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.fieldNames) || {},\n        _ref3$value = _ref3.value,\n        valuePropsName = _ref3$value === void 0 ? 'value' : _ref3$value,\n        _ref3$label = _ref3.label,\n        labelPropsName = _ref3$label === void 0 ? 'label' : _ref3$label,\n        _ref3$children = _ref3.children,\n        childrenPropsName = _ref3$children === void 0 ? 'children' : _ref3$children;\n\n    var valuesMap = new Map();\n\n    var traverseOptions = function traverseOptions(_options) {\n      if (!(_options === null || _options === void 0 ? void 0 : _options.length)) {\n        return valuesMap;\n      }\n\n      var length = _options.length;\n      var i = 0;\n\n      while (i < length) {\n        var cur = _options[i++];\n        valuesMap.set(cur[valuePropsName], cur[labelPropsName]);\n        traverseOptions(cur[childrenPropsName]);\n      }\n\n      return valuesMap;\n    };\n\n    return traverseOptions(options);\n  }, [fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.fieldNames, mode, options]);\n\n  var onChange = function onChange(value, optionList, extra) {\n    // 将搜索框置空 和 antd 行为保持一致\n    if (showSearch && autoClearSearchValue) {\n      _fetchData('');\n\n      setSearchValue('');\n    }\n\n    propsOnChange === null || propsOnChange === void 0 ? void 0 : propsOnChange(value, optionList, extra);\n  };\n\n  if (mode === 'read') {\n    var dom = /*#__PURE__*/React.createElement(React.Fragment, null, proFieldParsingText(rest.text, ObjToMap(rest.valueEnum || optionsValueEnum)));\n\n    if (render) {\n      return render(rest.text, _objectSpread({\n        mode: mode\n      }, fieldProps), dom) || null;\n    }\n\n    return dom;\n  }\n\n  if (mode === 'edit') {\n    var _fieldProps$value;\n\n    var valuesLength = Array.isArray(fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.value) ? fieldProps === null || fieldProps === void 0 ? void 0 : (_fieldProps$value = fieldProps.value) === null || _fieldProps$value === void 0 ? void 0 : _fieldProps$value.length : 0;\n\n    var _dom = /*#__PURE__*/React.createElement(_Spin, {\n      spinning: loading\n    }, /*#__PURE__*/React.createElement(_TreeSelect, _extends({\n      open: open,\n      onDropdownVisibleChange: setOpen,\n      ref: treeSelectRef,\n      dropdownMatchSelectWidth: !light,\n      tagRender: light ? function (item) {\n        var _fieldProps$value2;\n\n        if (valuesLength < 2) return /*#__PURE__*/React.createElement(React.Fragment, null, item.label);\n        /**\n         * 性能不好，等我给 antd 提个issue\n         */\n\n        var itemIndex = fieldProps === null || fieldProps === void 0 ? void 0 : (_fieldProps$value2 = fieldProps.value) === null || _fieldProps$value2 === void 0 ? void 0 : _fieldProps$value2.findIndex(function (v) {\n          return v === item.value || v.value === item.value;\n        });\n        return /*#__PURE__*/React.createElement(React.Fragment, null, item.label, \" \", itemIndex < valuesLength - 1 ? ',' : '');\n      } : undefined\n    }, fieldProps, {\n      bordered: !light,\n      treeData: options || treeData,\n      showSearch: showSearch,\n      style: _objectSpread({\n        minWidth: 60\n      }, fieldProps.style),\n      searchValue: searchValue,\n      autoClearSearchValue: autoClearSearchValue,\n      onClear: function onClear() {\n        _onClear === null || _onClear === void 0 ? void 0 : _onClear();\n\n        _fetchData('');\n\n        if (showSearch) {\n          setSearchValue('');\n        }\n      },\n      onChange: onChange,\n      onSearch: function onSearch(value) {\n        _fetchData(value);\n\n        setSearchValue(value);\n      },\n      onBlur: function onBlur(event) {\n        setSearchValue('');\n\n        _fetchData('');\n\n        _onBlur === null || _onBlur === void 0 ? void 0 : _onBlur(event);\n      },\n      className: classNames(fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.className, layoutClassName)\n    })));\n\n    if (renderFormItem) {\n      _dom = renderFormItem(rest.text, _objectSpread({\n        mode: mode\n      }, fieldProps), _dom) || null;\n    }\n\n    if (light) {\n      var disabled = fieldProps.disabled,\n          allowClear = fieldProps.allowClear,\n          placeholder = fieldProps.placeholder;\n      return /*#__PURE__*/React.createElement(FieldLabel, {\n        label: label,\n        disabled: disabled,\n        placeholder: placeholder,\n        size: size,\n        onLabelClick: function onLabelClick() {\n          return setOpen(!open);\n        },\n        allowClear: allowClear,\n        bordered: rest.bordered,\n        value: _dom,\n        onClear: function onClear() {\n          return propsOnChange === null || propsOnChange === void 0 ? void 0 : propsOnChange(undefined, [], {});\n        }\n      });\n    }\n\n    return _dom;\n  }\n\n  return null;\n};\n\nexport default /*#__PURE__*/React.forwardRef(FieldTreeSelect);"]},"metadata":{},"sourceType":"module"}