{"ast":null,"code":"import \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport React from 'react';\n\nvar languageFormat = function languageFormat(text, language) {\n  if (typeof text !== 'string') {\n    return text;\n  }\n\n  try {\n    if (language === 'json') {\n      return JSON.stringify(JSON.parse(text), null, 2);\n    }\n  } catch (error) {// console.log(error)\n  }\n\n  return text;\n};\n/**\n * 代码片段组件 这个组件为了显示简单的配置，复杂的请使用更加重型的组件\n *\n * @param\n */\n\n\nvar FieldCode = function FieldCode(_ref, ref) {\n  var text = _ref.text,\n      mode = _ref.mode,\n      render = _ref.render,\n      _ref$language = _ref.language,\n      language = _ref$language === void 0 ? 'text' : _ref$language,\n      renderFormItem = _ref.renderFormItem,\n      plain = _ref.plain,\n      fieldProps = _ref.fieldProps;\n  var code = languageFormat(text, language);\n\n  if (mode === 'read') {\n    var dom = /*#__PURE__*/React.createElement(\"pre\", _extends({\n      ref: ref\n    }, fieldProps, {\n      style: _objectSpread({\n        padding: 16,\n        overflow: 'auto',\n        fontSize: '85%',\n        lineHeight: 1.45,\n        backgroundColor: '#f6f8fa',\n        borderRadius: 3,\n        width: 'min-content'\n      }, fieldProps.style)\n    }), /*#__PURE__*/React.createElement(\"code\", null, code));\n\n    if (render) {\n      return render(code, _objectSpread(_objectSpread({\n        mode: mode\n      }, fieldProps), {}, {\n        ref: ref\n      }), dom);\n    }\n\n    return dom;\n  }\n\n  if (mode === 'edit' || mode === 'update') {\n    var _dom = /*#__PURE__*/React.createElement(_Input.TextArea, _extends({\n      rows: 5\n    }, fieldProps, {\n      ref: ref\n    }));\n\n    if (plain) {\n      _dom = /*#__PURE__*/React.createElement(_Input, _extends({}, fieldProps, {\n        ref: ref\n      }));\n    }\n\n    if (renderFormItem) {\n      return renderFormItem(code, _objectSpread(_objectSpread({\n        mode: mode\n      }, fieldProps), {}, {\n        ref: ref\n      }), _dom);\n    }\n\n    return _dom;\n  }\n\n  return null;\n};\n\nexport default /*#__PURE__*/React.forwardRef(FieldCode);","map":{"version":3,"sources":["/Users/jameszow/Documents/RustWorkSpace/covid-ipfs/covid-ipfs-client/node_modules/@ant-design/pro-field/es/components/Code/index.js"],"names":["_Input","_extends","_objectSpread","React","languageFormat","text","language","JSON","stringify","parse","error","FieldCode","_ref","ref","mode","render","_ref$language","renderFormItem","plain","fieldProps","code","dom","createElement","style","padding","overflow","fontSize","lineHeight","backgroundColor","borderRadius","width","_dom","TextArea","rows","forwardRef"],"mappings":"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","sourcesContent":["import \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport React from 'react';\n\nvar languageFormat = function languageFormat(text, language) {\n  if (typeof text !== 'string') {\n    return text;\n  }\n\n  try {\n    if (language === 'json') {\n      return JSON.stringify(JSON.parse(text), null, 2);\n    }\n  } catch (error) {// console.log(error)\n  }\n\n  return text;\n};\n/**\n * 代码片段组件 这个组件为了显示简单的配置，复杂的请使用更加重型的组件\n *\n * @param\n */\n\n\nvar FieldCode = function FieldCode(_ref, ref) {\n  var text = _ref.text,\n      mode = _ref.mode,\n      render = _ref.render,\n      _ref$language = _ref.language,\n      language = _ref$language === void 0 ? 'text' : _ref$language,\n      renderFormItem = _ref.renderFormItem,\n      plain = _ref.plain,\n      fieldProps = _ref.fieldProps;\n  var code = languageFormat(text, language);\n\n  if (mode === 'read') {\n    var dom = /*#__PURE__*/React.createElement(\"pre\", _extends({\n      ref: ref\n    }, fieldProps, {\n      style: _objectSpread({\n        padding: 16,\n        overflow: 'auto',\n        fontSize: '85%',\n        lineHeight: 1.45,\n        backgroundColor: '#f6f8fa',\n        borderRadius: 3,\n        width: 'min-content'\n      }, fieldProps.style)\n    }), /*#__PURE__*/React.createElement(\"code\", null, code));\n\n    if (render) {\n      return render(code, _objectSpread(_objectSpread({\n        mode: mode\n      }, fieldProps), {}, {\n        ref: ref\n      }), dom);\n    }\n\n    return dom;\n  }\n\n  if (mode === 'edit' || mode === 'update') {\n    var _dom = /*#__PURE__*/React.createElement(_Input.TextArea, _extends({\n      rows: 5\n    }, fieldProps, {\n      ref: ref\n    }));\n\n    if (plain) {\n      _dom = /*#__PURE__*/React.createElement(_Input, _extends({}, fieldProps, {\n        ref: ref\n      }));\n    }\n\n    if (renderFormItem) {\n      return renderFormItem(code, _objectSpread(_objectSpread({\n        mode: mode\n      }, fieldProps), {}, {\n        ref: ref\n      }), _dom);\n    }\n\n    return _dom;\n  }\n\n  return null;\n};\n\nexport default /*#__PURE__*/React.forwardRef(FieldCode);"]},"metadata":{},"sourceType":"module"}