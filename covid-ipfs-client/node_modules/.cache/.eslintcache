[{"/Users/jameszow/Documents/RustWorkSpace/covid-ipfs/covid-ipfs-client/src/index.js":"1","/Users/jameszow/Documents/RustWorkSpace/covid-ipfs/covid-ipfs-client/src/App.tsx":"2"},{"size":232,"mtime":1655609132200,"results":"3","hashOfConfig":"4"},{"size":5252,"mtime":1655629471858,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"1xh0kpg",{"filePath":"9","messages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"/Users/jameszow/Documents/RustWorkSpace/covid-ipfs/covid-ipfs-client/src/index.js",[],["12","13"],"/Users/jameszow/Documents/RustWorkSpace/covid-ipfs/covid-ipfs-client/src/App.tsx",["14","15","16","17"],"import React, { FC } from 'react';\nimport { Button, message, Result, notification} from 'antd';\nimport { SmileOutlined } from '@ant-design/icons';\nimport './App.css';\nimport {\n  ProCard,\n  ProForm,\n  ProFormCheckbox,\n  ProFormDatePicker,\n  ProFormDateRangePicker,\n  ProFormSelect,\n  ProFormText,\n  ProFormTextArea,\n  ProFormRadio,\n  ProFormDigit,\n  StepsForm,\n} from '@ant-design/pro-components';\nimport axios from 'axios'\n\nconst waitTime = (time: number = 100) => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(true);\n    }, time);\n  });\n};\n\ntype NotificationType = 'success' | 'info' | 'warning' | 'error';\nconst openNotificationWithIcon = (type: NotificationType, content: string) => {\n  notification[type]({\n    message: '消息通知',\n    description: content\n  });\n};\n\nconst App: FC = () => {\n  return (\n    <ProCard>\n      <StepsForm<{\n        name: string;\n      }>\n        onFinish={async (values) => {\n          console.log(values);\n\n          // axios request api\n          axios({\n            url:'http://101.43.52.162:8082/nucleic/save',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            data: values,\n            method:'post'\n            }).then(\n              res => openNotificationWithIcon('success', '核酸结果hash: ' + res.data.data)\n            ).catch(\n              err => openNotificationWithIcon('error', '核酸结果保存失败')\n            )\n        }}\n        formProps={{\n          validateMessages: {\n            required: '此项为必填项',\n          },\n        }}\n        submitter={{\n          render: (props) => {\n            if (props.step === 0) {\n              return (\n                <Button type=\"primary\" onClick={() => props.onSubmit?.()}>\n                  下一步 {'>'}\n                </Button>\n              );\n            }\n\n            if (props.step === 1) {\n              return [\n                <Button key=\"pre\" onClick={() => props.onPre?.()}>\n                  返回上一步\n                </Button>,\n                <Button type=\"primary\" key=\"goToTree\" onClick={() => props.onSubmit?.()}>\n                  下一步 {'>'}\n                </Button>,\n              ];\n            }\n\n            return [\n              <Button key=\"gotoTwo\" onClick={() => props.onPre?.()}>\n                {'<'} 返回上一步\n              </Button>,\n              <Button type=\"primary\" key=\"goToTree\" onClick={() => props.onSubmit?.()}>\n                保存结果到IPFS\n              </Button>,\n            ];\n          },\n        }}\n      >\n        <StepsForm.StepForm<{\n          name: string;\n        }>\n          name=\"base\"\n          title=\"创建用户信息\"\n          onFinish={async ({ name }) => {\n            console.log(name);\n            // await waitTime(2000);\n            return true;\n          }}\n        >\n          <ProFormText\n            id=\"name\"\n            name=\"name\"\n            label=\"用户名\"\n            width=\"md\"\n            tooltip=\"用户的姓名\"\n            placeholder=\"请输入姓名\"\n            rules={[{ required: true }]}\n          />\n          <ProFormRadio.Group id=\"sex\" name=\"sex\" label=\"性别\"\n              options={[\n                {\n                  label: '男',\n                  value: 1,\n                },\n                {\n                  label: '女',\n                  value: 0,\n                }\n              ]} \n              rules={[{ required: true }]}\n          />\n          <ProFormDigit id=\"phone\" name=\"phone\" label=\"电话\"  width=\"md\" rules={[{ required: true }]}/>\n          <ProFormTextArea id=\"address\" name=\"address\" label=\"住址\" width=\"md\" placeholder=\"请输入居住地, xxx省xxx市xxx街道xxx路\" rules={[{ required: true }]}/>\n          <ProFormDatePicker id=\"date\" name=\"date\" label=\"日期\" rules={[{ required: true }]}/>\n        </StepsForm.StepForm>\n        <StepsForm.StepForm<{\n          checkbox: string;\n        }>\n          name=\"checkbox\"\n          title=\"填写核酸信息\"\n        >\n          <ProFormCheckbox.Group\n            name=\"checkbox\"\n            label=\"核酸机构名称\"\n            width=\"lg\"\n            options={['上海市第十人民医院', '上海中检医学检验所（气膜）', '上海锦测医学检验所（气膜）', \n            '上海华测艾普医学检验所', '河南省卫健委2舱', '湖州市城市核酸检测基地', '浙江医疗队迪安气膜实验室']}\n          />\n          <ProFormSelect\n            id = \"result\"\n            label=\"核酸类型\"\n            name=\"result\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n            options={[\n              { value: 'NEGATIVE', label: '阴性' },\n              { value: 'POSITIVE', label: '阳性' },\n            ]}\n          />\n          <ProFormTextArea name=\"remake\" label=\"备注\" width=\"xl\" placeholder=\"检验结果具体信息\"/>\n        </StepsForm.StepForm>\n        <StepsForm.StepForm name=\"time\" title=\"发布核酸结果\">\n        <Result\n          icon={<SmileOutlined />}\n          title=\"核酸信息收集完成，确认无误请保存\"\n          />\n        </StepsForm.StepForm>\n      </StepsForm>\n    </ProCard>\n  );\n};\n\nexport default App;",{"ruleId":"18","replacedBy":"19"},{"ruleId":"20","replacedBy":"21"},{"ruleId":"22","severity":1,"message":"23","line":2,"column":18,"nodeType":"24","messageId":"25","endLine":2,"endColumn":25},{"ruleId":"22","severity":1,"message":"26","line":7,"column":3,"nodeType":"24","messageId":"25","endLine":7,"endColumn":10},{"ruleId":"22","severity":1,"message":"27","line":10,"column":3,"nodeType":"24","messageId":"25","endLine":10,"endColumn":25},{"ruleId":"22","severity":1,"message":"28","line":20,"column":7,"nodeType":"24","messageId":"25","endLine":20,"endColumn":15},"no-native-reassign",["29"],"no-negated-in-lhs",["30"],"@typescript-eslint/no-unused-vars","'message' is defined but never used.","Identifier","unusedVar","'ProForm' is defined but never used.","'ProFormDateRangePicker' is defined but never used.","'waitTime' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]